box

target ES6

ACE {
	async LoadBoxes preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) { 
		on ok (BoxList.render)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	
	async CreateBox preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) { 
		on ok triggers (common.Route)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	EditBox {
		on ok (BoxList.editBox)
	}
	ToggleMaxIntervalOfBox {
		on ok (BoxList.toggleMaxInterval)
	}
	MaxIntervalChangedOfBox {
		on ok (BoxList.maxIntervalChanged)
	}
	CancelEditBox {
		on ok (BoxList.cancelEditBox)
	}
	async UpdateBox preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok triggers (LoadBoxes)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	DeleteBoxClick {
		on ok (BoxList.displayConfirmDelete)
	}
	CancelDeleteBox {
		on ok (BoxList.hideConfirmDelete)
	}
	async DeleteBox preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok triggers (LoadBoxes)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	
	async PostponeCardsOfBox preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on next triggers (LoadNextCard)
		on list triggers (LoadBoxes)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	
	async LoadNextCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Box.render) triggers (LoadBoxStatistics)
		on scheduleNext triggers (ScheduleNextCard)
		on doNotScheduleNext (Box.render) triggers (LoadBoxStatistics)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	async ScheduleNextCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok triggers (LoadNextCard)
		on badRequest
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	ToggleScheduleNext {
		on ok (Box.toggleScheduleNext)
	}
	DisplayWanted {
		on all (Box.displayNextItem Box.enableScoreButtons)
		on notAll (Box.displayNextItem)
		on image (Box.displayImage Box.enableScoreButtons)
	}
	async ScoreCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok triggers (LoadNextCard)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	async LoadNextReinforceCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (BoxReinforce.render) triggers (LoadBoxStatistics)
		on noCard triggers (common.Route)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	DisplayWantedReinforce {
		on all (BoxReinforce.displayNextItem BoxReinforce.enableScoreButtons)
		on notAll (BoxReinforce.displayNextItem)
		on image (BoxReinforce.displayImage BoxReinforce.enableScoreButtons)
	}
	async ScoreReinforceCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok triggers (LoadNextReinforceCard)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
	async LoadBoxStatistics preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Box.renderStatistics)
		on unauthorized ( common.Common.displayError ) triggers (common.ClearToast common.Logout)
	}
}

views {
	BoxList {
		render
		toggleMaxInterval
		maxIntervalChanged
		editBox
		cancelEditBox
		displayConfirmDelete
		hideConfirmDelete
	}
	Box {
		render
		displayNextItem
		displayImage
		enableScoreButtons
		toggleScheduleNext
		renderStatistics
	}
	BoxReinforce {
		render
		displayNextItem
		displayImage
		enableScoreButtons
	}
}