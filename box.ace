HttpClient

box

ACE 
	InitBoxesForDay
		call com.anfelisa.box.InitMyBoxesForDay
		set loading common.rootContainer.spinner.display 
		on ok triggers (LoadBoxes) 
				
	LoadBoxes 
		fromAppState ( common.rootContainer.mainView.dashboardView.boxList as previousBoxList )
		call com.anfelisa.box.GetBoxes
		set loading common.rootContainer.spinner.display 
		on ok ( 
			merge common.rootContainer.mainView.dashboardView.boxList
		) triggers (LoadBoxStatistics)
	
	LoadBoxStatistics 
		fromAppState ( common.rootContainer.mainView.dashboardView.boxList )
		call com.anfelisa.box.GetBoxStatistics
		set loading common.rootContainer.spinner.display 
		on ok ( 
			merge common.rootContainer.mainView.dashboardView.boxList
		)
	
	LoadActiveCards
		fromAppState (common.rootContainer.mainView.allActiveCardsView.boxId)
		call com.anfelisa.box.LoadAllActiveCards
		set loading common.rootContainer.spinner.display 
		on ok ( 
			set common.rootContainer.mainView.allActiveCardsView.activeCardList
			set common.rootContainer.mainView.allActiveCardsView.selectedCardIds
			set common.rootContainer.mainView.allActiveCardsView.editable
		) triggers (
			FilterActiveCardList
		)
	
	ToggleScheduleCardSelection ( cardId )
		fromAppState (common.rootContainer.mainView.allActiveCardsView.selectedCardIds)
		on ok (set common.rootContainer.mainView.allActiveCardsView.selectedCardIds)
	
	SelectScheduleCardRange ( cardId )
		fromAppState (
			common.rootContainer.mainView.allActiveCardsView.selectedCardIds,
			common.rootContainer.mainView.allActiveCardsView.activeCardList
		)
		on ok (
			set common.rootContainer.mainView.allActiveCardsView.selectedCardIds
		)
		on noSelection triggers (
			ToggleScheduleCardSelection
		)
	
	ToggleAllScheduleCardSelection 
		fromAppState (
			common.rootContainer.mainView.allActiveCardsView.selectedCardIds,
			common.rootContainer.mainView.allActiveCardsView.activeCardList
		)
		on ok (set common.rootContainer.mainView.allActiveCardsView.selectedCardIds)
	
	ScheduleSelectedCards
		fromAppState (
			common.rootContainer.mainView.allActiveCardsView.selectedCardIds as cardIds,
			common.rootContainer.mainView.allActiveCardsView.boxId
		) 
	 	call com.anfelisa.box.ScheduleCards
		set loading common.rootContainer.spinner.display 
		on noFilter triggers (LoadActiveCards)
	
	SortSelectedCardsOut 
		fromAppState (
			common.rootContainer.mainView.allActiveCardsView.selectedCardIds as cardIds,
			common.rootContainer.mainView.allActiveCardsView.boxId
		) 
	 	call com.anfelisa.box.SortCardsOut
		set loading common.rootContainer.spinner.display 
		on ok triggers (LoadActiveCards)
		
	UpdateCardPriority(cardId, priority, actualPriority)
	 	call com.anfelisa.card.UpdateCardPriority
		set loading common.rootContainer.spinner.display 
		on ok triggers (LoadActiveCards)

	FilterActiveCardListWithLastQualityChanged ( lastQualityFilter )
		fromAppState (
			common.rootContainer.mainView.allActiveCardsView.selectedLastQualityFilters
		)
		on ok (
			set common.rootContainer.mainView.allActiveCardsView.selectedLastQualityFilters
		) triggers (
			FilterActiveCardList
		)
		
	FilterActiveCardList
		fromAppState (
			common.rootContainer.mainView.allActiveCardsView.selectedLastQualityFilters,
			common.rootContainer.mainView.allActiveCardsView.activeCardList
		)
		on ok (
			set common.rootContainer.mainView.allActiveCardsView.activeCardList
		)
		
	BoxClick ( boxId, openTodaysCards, categoryId, reverse )
		on queryCards triggers (common.RouteToQueryCards)
		on authorView triggers (common.RouteToAuthorView)
	
	DeleteBoxClick ( boxId )
		on ok (set common.rootContainer.mainView.dashboardView.deleteBox)
	
	CancelDeleteBox 
		on ok (
			set common.rootContainer.mainView.dashboardView.deleteBox.boxId
		)
	
	DeleteBox
		fromAppState ( common.rootContainer.mainView.dashboardView.deleteBox.boxId )
		call com.anfelisa.box.DeleteBox
		set loading common.rootContainer.spinner.display 
		on ok (
			set common.rootContainer.mainView.dashboardView.deleteBox.boxId
		) triggers (LoadBoxes)
		on error (
			set common.rootContainer.mainView.dashboardView.deleteBox.boxId
		) triggers (common.DisplayErrorToast)
		
	ArchiveBox (archived, boxId)
		call com.anfelisa.box.ArchiveBox
		set loading common.rootContainer.spinner.display 
		on ok triggers (InitBoxesForDay)
	
	LoadNextCard
		fromAppState (common.rootContainer.mainView.queryCardView.boxId)
	 	call com.anfelisa.box.LoadNextCard
		set loading common.rootContainer.spinner.display 
		on ok (
			set common.rootContainer.mainView.queryCardView.nextCard
			set common.rootContainer.mainView.queryCardView.reverse
			set common.rootContainer.mainView.queryCardView.openTodaysCards
			set common.rootContainer.mainView.queryCardView.allTodaysCards
			set common.rootContainer.mainView.queryCardView.nextCard.disableScoreButtons
		)
		on finished triggers (
			common.RouteToDefault 
			common.DisplayToast
		)
	
	DisplayWanted ( wantedItemsLength )
		fromAppState ( common.rootContainer.mainView.queryCardView.nextCard.index)
		on ok (
			set common.rootContainer.mainView.queryCardView.nextCard.index
			set common.rootContainer.mainView.queryCardView.nextCard.disableScoreButtons
		)
	
	ScoreCard ( scoredCardQuality )
		fromAppState ( common.rootContainer.mainView.queryCardView.nextCard.scheduledCardId )
	 	call com.anfelisa.box.ScoreCard
		set loading common.rootContainer.spinner.display, common.rootContainer.mainView.queryCardView.nextCard.disableScoreButtons 
		on ok triggers (InitBoxesForDayDuringScore)
		on showInfoToast triggers (
			common.DisplayToast
		)
		on showWarningToast triggers (
			common.DisplayWarningToast
		)
	
	ScoreReinforceCard ( keep )
		fromAppState (common.rootContainer.mainView.queryCardView.nextCard.reinforceCardId)
	 	call com.anfelisa.box.ScoreReinforceCard
		set loading common.rootContainer.spinner.display, common.rootContainer.mainView.queryCardView.nextCard.disableScoreButtons 
		on ok triggers (InitBoxesForDayDuringScore)

	SortCardOut
		fromAppState (
			common.rootContainer.mainView.queryCardView.nextCard.cardId, 
			common.rootContainer.mainView.queryCardView.boxId
		)
	 	call com.anfelisa.box.SortCardsOut
		set loading common.rootContainer.spinner.display, common.rootContainer.mainView.queryCardView.nextCard.disableSortOutButton
		on ok triggers (InitBoxesForDayDuringScore)

	InitBoxesForDayDuringScore
		call com.anfelisa.box.InitMyBoxesForDay
		set loading common.rootContainer.spinner.display 
		on ok triggers (LoadNextCard) 
				
	LoadSettings
		fromAppState (common.rootContainer.mainView.boxSettingsView.boxId)
	 	call com.anfelisa.box.GetBoxSettings
		set loading common.rootContainer.spinner.display 
		on ok (	merge common.rootContainer.mainView.boxSettingsView.boxSettings )
			triggers (TooManyCardsStatus)
		
	SaveBoxSettings
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxId,
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval,
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay,
			common.rootContainer.mainView.boxSettingsView.boxSettings.categoryId,
			common.rootContainer.mainView.boxSettingsView.boxSettings.categoryName,
			common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup,
			common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage,
			common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage
		)
	 	call com.anfelisa.box.UpdateBox
		set loading common.rootContainer.spinner.display 
		on ok triggers (common.RouteToDefault)
	

	MaxCardsPerDayChanged ( maxCardsPerDay )
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval,
			common.rootContainer.mainView.boxSettingsView.boxSettings.allActiveCards
		)
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay
			set common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDayInvalid
		) triggers (TooManyCardsStatus)
		
	MaxIntervalChanged ( maxInterval )
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay,
			common.rootContainer.mainView.boxSettingsView.boxSettings.allActiveCards
		)
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval
			set common.rootContainer.mainView.boxSettingsView.boxSettings.maxIntervalInvalid
		) triggers (TooManyCardsStatus)
		
	TooManyCardsStatus
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay,
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval,
			common.rootContainer.mainView.boxSettingsView.boxSettings.allActiveCards
		)
		on ok (set common.rootContainer.mainView.boxSettingsView.boxSettings.tooManyCardsStatus)

	CreateRootCategory
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval,
			common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay,
			common.rootContainer.mainView.boxSettingsView.boxSettings.categoryId,
			common.rootContainer.mainView.boxSettingsView.boxSettings.categoryName,
			common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup,
			common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage,
			common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage
		)
		call com.anfelisa.box.CreateBox
		set loading common.rootContainer.spinner.display 
		on ok triggers (common.RouteToDefault)
	
	CategoryNameChanged ( categoryName )
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.categoryName
		)
		
	DictionaryLookupChanged
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage,
			common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage,
			common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup
		)
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup
			set common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid
		)
		
	GivenLanguageChanged ( givenLanguage )
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage,
			common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup
		)
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage
			set common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid
		)
		
	WantedLanguageChanged ( wantedLanguage )
		fromAppState (
			common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage,
			common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup
		)
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage
			set common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid
		)
		
	RootCategoryNameChanged ( categoryName )
		on ok (
			set common.rootContainer.mainView.boxSettingsView.boxSettings.categoryName
		)
		
		
		

	
