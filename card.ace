HttpClient 

card

ACE
LoadCards
	call com.anfelisa.card.GetCards
	loadingFlag common.state.State.displaySpinner 
	on ok ( merge common.state.State.data.AuthorView.cardView )
	on noCategorySelected ( reset common.state.State.data.AuthorView.cardView.CardView.cardList )

 CreateCard 
 	call com.anfelisa.card.CreateCard
	loadingFlag common.state.State.displaySpinner 
	on ok ( merge common.state.State.data.AuthorView.cardView )
	triggers (LoadCards)

 UpdateCard 
 	call com.anfelisa.card.UpdateCard
	loadingFlag common.state.State.displaySpinner 
	on ok ( merge common.state.State.data.AuthorView.cardView )
	triggers (LoadCards)


 DeleteCard 
 	call com.anfelisa.card.DeleteCard
	loadingFlag common.state.State.displaySpinner 
	on ok ( 
		merge common.state.State.data.AuthorView.cardView
	) triggers (LoadCards)
	on error ( 
		merge common.state.State.data.AuthorView.cardView
	) triggers (common.DisplayError)


GivenOfNewCardChanged <given>
	on ok (merge common.state.State.data.AuthorView.cardView.CardView.newCard)
		triggers (SearchDuplicateCards)

SearchDuplicateCards 
	call com.anfelisa.card.GetDuplicates
	loadingFlag common.state.State.data.AuthorView.cardView.CardView.newCard.NewCard.displaySpinner 
	on ok ( set common.state.State.data.AuthorView.cardView.CardView.cardDuplicates )

WantedOfNewCardChanged <wanted>
	on ok (merge common.state.State.data.AuthorView.cardView.CardView.newCard)
		triggers (SearchDuplicateCards)

CancelNewCard 
	on ok (set common.state.State.data.AuthorView.cardView.CardView.newCard)


GivenOfEditedCardChanged <given>
	on ok (merge common.state.State.data.AuthorView.cardView.CardView.editedCard)

WantedOfEditedCardChanged <wanted>
	on ok (merge common.state.State.data.AuthorView.cardView.CardView.editedCard)

CancelEditCard 
	on ok (set common.state.State.data.AuthorView.cardView.CardView.editedCard)

EditCard <cardId>
	on ok (set common.state.State.data.AuthorView.cardView.CardView.editedCard)

DeleteCardClick <cardId>
	on ok (set common.state.State.data.AuthorView.cardView.CardView.deleteCard)

CancelDeleteCard 
	on ok (set common.state.State.data.AuthorView.cardView.CardView.deleteCard)


FilterCards <filter>
	on ok (set common.state.State.data.AuthorView.cardView.CardView.filter)

Translate 
	call com.anfelisa.card.GetTranslation
	loadingFlag common.state.State.data.AuthorView.cardView.CardView.newCard.NewCard.displayTranslateSpinner 
	on wantedFetched (merge common.state.State.data.AuthorView.cardView.CardView.newCard ) triggers (SearchDuplicateCards)
	on givenFetched (merge common.state.State.data.AuthorView.cardView.CardView.newCard ) triggers (SearchDuplicateCards)
	on error
	on empty
	on targetNotEmtpy


PassValueToDictionary 
	on ok (set common.state.State.data.AuthorView.cardView.CardView.dictionaryValue)


ToggleInputOrder <naturalInputOrder>
	on ok (set common.state.State.data.AuthorView.cardView.CardView.naturalInputOrder)


ToggleUseDictionary 
	on ok (set common.state.State.data.AuthorView.cardView.CardView.useDictionary)


LoadWantedImageOfNewCard <image>
	on ok ( set common.state.State.data.AuthorView.cardView.CardView.newCard.NewCard.image )

LoadWantedImageOfEditedCard <image>
	on ok ( set common.state.State.data.AuthorView.cardView.CardView.editedCard.EditedCard.image )

RemoveNewCardImage 
	on ok ( set common.state.State.data.AuthorView.cardView.CardView.newCard.NewCard.image )


RemoveEditedCardImage 
	on ok ( set common.state.State.data.AuthorView.cardView.CardView.editedCard.EditedCard.image )

ToggleScheduleCardSelection <cardId>
	on ok (set common.state.State.data.AuthorView.cardView.CardView.selectedCardIds)

ToggleAllScheduleCardSelection 
	on ok (set common.state.State.data.AuthorView.cardView.CardView.selectedCardIds)

ScheduleSelectedCards 
 	call com.anfelisa.box.ScheduleCards
	loadingFlag common.state.State.displaySpinner 
	on ok triggers (LoadCards)
	
MoveCardsStarted
	on ok (set common.state.State.data.AuthorView.cardView.CardView.movedCardIds)
	
MoveCards
 	call com.anfelisa.card.MoveCards
	loadingFlag common.state.State.displaySpinner 
	on ok (
		reset common.state.State.data.AuthorView.cardView.CardView.movedCardIds
	) triggers (category.LoadCategoryTree)
	
