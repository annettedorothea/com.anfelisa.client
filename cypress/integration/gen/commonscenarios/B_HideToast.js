/********************************************************************************
 * generated by de.acegen 1.2.1
 ********************************************************************************/




import * as ScenarioUtils from "../../../acegen/src/ScenarioUtils";
import AppUtils from "../../../../es6/src/app/AppUtils";
import * as LoginActionIds from "../../../acegen/gen/login/LoginActionIds";
import * as CommonActionIds from "../../../acegen/gen/common/CommonActionIds";

const testId = ScenarioUtils.testId();

context('B_HideToast', () => {
    beforeEach(() => {
    	let nonDeterministicValues;
    	let nonDeterministicValue;
		ScenarioUtils.getCypressFor(CommonActionIds.init);
		ScenarioUtils.waitInMillis(5000);
		ScenarioUtils.getCypressFor(LoginActionIds.usernameChanged, [`username-${testId}`]);
		ScenarioUtils.getCypressFor(LoginActionIds.passwordChanged, [`password`]);
		ScenarioUtils.getCypressFor(LoginActionIds.login);
    })

    it('errorHidden ', () => {
		ScenarioUtils.waitInMillis(5000).should(() => {
			const appState = JSON.parse(localStorage.getItem('appState'))
			expect(appState.rootContainer.messages, "errorHidden").to.eql([
				{ 
					code : 401,
					text : `Unauthorized`,
					textKey : `loginFailed`,
					type : `error`,
					visible : false,
					id : 0
				}
			]
			)
		});
    })
})




/******* S.D.G. *******/




