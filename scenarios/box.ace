HttpClient boxscenarios

scenarios 

RouteToBoxCreate
	GIVEN registrationscenarios.Register
	WHEN common.Route(hash: "#box/create")
	THEN 
		expectedState
			allActiveCards common.rootContainer.mainView.boxSettingsView.boxSettings.allActiveCards should be undefined
			allCards common.rootContainer.mainView.boxSettingsView.boxSettings.allCards should be undefined
			dictionaryLookup common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup should be false
			dictionaryLookupInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid should be undefined
			boxId common.rootContainer.mainView.boxSettingsView.boxSettings.boxId should be ""
			categoryName common.rootContainer.mainView.boxSettingsView.boxSettings.categoryName should be ""
			categoryId common.rootContainer.mainView.boxSettingsView.boxSettings.categoryId should be undefined
			givenLanguage common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage should be ""
			maxCardsPerDay common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay should be 8
			maxCardsPerDayInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDayInvalid should be undefined
			maxInterval common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval should be ""
			maxIntervalInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxIntervalInvalid should be undefined
			shared common.rootContainer.mainView.boxSettingsView.boxSettings.shared should be undefined
			tooManyCardsStatus common.rootContainer.mainView.boxSettingsView.boxSettings.tooManyCardsStatus should be undefined
			wantedLanguage common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage should be ""
		verifications
			saveDisabled
			givenLanguageDisabled
			wantedLanguageDisabled
			
			
CancelCreateBox
	GIVEN RouteToBoxCreate
	WHEN common.Route( hash: "#dashboard" )
	THEN 
		expectedState 
			boxList common.rootContainer.mainView.dashboardView.boxList should be []
			deleteBox common.rootContainer.mainView.dashboardView.deleteBox should be {
				confirmDelete: false,
				boxId: null
			}
		
CategoryNameChanged
	GIVEN RouteToBoxCreate
	WHEN box.CategoryNameChanged( categoryName: "categoryName" )
	THEN 
		expectedState
			categoryName common.rootContainer.mainView.boxSettingsView.boxSettings.categoryName should be "categoryName"
		verifications
			saveEnabled
		
MaxCardsPerDayChanged
	GIVEN CategoryNameChanged
	WHEN box.MaxCardsPerDayChanged( maxCardsPerDay: 12 )
	THEN 
		expectedState
			maxCardsPerDay common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay should be "12"
			maxCardsPerDayInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDayInvalid should be false
		verifications
			saveEnabled
		
MaxCardsPerDayChangedEmpty
	GIVEN CategoryNameChanged
	WHEN box.MaxCardsPerDayChanged( maxCardsPerDay: "" )
	THEN 
		expectedState
			maxCardsPerDay common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay should be ""
			maxCardsPerDayInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDayInvalid should be true
		verifications
			saveDisabled
		
MaxCardsPerDayChangedNaN
	GIVEN CategoryNameChanged
	WHEN box.MaxCardsPerDayChanged( maxCardsPerDay: "xxx" )
	THEN 
		expectedState
			maxCardsPerDay common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay should be "xxx"
			maxCardsPerDayInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDayInvalid should be true
		verifications
			saveDisabled
		
MaxCardsPerDayChangedInvalid
	GIVEN CategoryNameChanged
	WHEN box.MaxCardsPerDayChanged( maxCardsPerDay: "0" )
	THEN 
		expectedState
			maxCardsPerDay common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDay should be "0"
			maxCardsPerDayInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxCardsPerDayInvalid should be true
		verifications
			saveDisabled
		
MaxIntervalChanged
	GIVEN MaxCardsPerDayChanged
	WHEN box.MaxIntervalChanged( maxInterval: 30 )
	THEN 
		expectedState
			maxInterval common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval should be "30"
			maxIntervalInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxIntervalInvalid should be false
		verifications
			saveEnabled
		
MaxIntervalChangedNaN
	GIVEN CategoryNameChanged
	WHEN box.MaxIntervalChanged( maxInterval: "NaN" )
	THEN 
		expectedState
			maxInterval common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval should be "NaN"
			maxIntervalInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxIntervalInvalid should be true
		verifications
			saveDisabled
		
MaxIntervalChangedInvalid
	GIVEN CategoryNameChanged
	WHEN box.MaxIntervalChanged( maxInterval: "0" )
	THEN 
		expectedState
			maxInterval common.rootContainer.mainView.boxSettingsView.boxSettings.maxInterval should be "0"
			maxIntervalInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.maxIntervalInvalid should be true
		verifications
			saveDisabled
		
DictionaryLookupChanged
	GIVEN CategoryNameChanged
	WHEN box.DictionaryLookupChanged
	THEN 
		expectedState
			dictionaryLookup common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup should be true
			dictionaryLookupInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid should be true
		verifications
			saveDisabled
			givenLanguageEnabled
			wantedLanguageEnabled
		
		
GivenLanguageChanged
	GIVEN DictionaryLookupChanged
	WHEN box.GivenLanguageChanged(givenLanguage: "de")
	THEN 
		expectedState
			dictionaryLookup common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup should be true
			dictionaryLookupInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid should be true
			givenLanguage common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage should be "de"
			wantedLanguage common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage should be ""
		verifications
			saveDisabled
			givenLanguageEnabled
			wantedLanguageEnabled
		
WantedLanguageChanged
	GIVEN GivenLanguageChanged
	WHEN box.WantedLanguageChanged(wantedLanguage: "en")
	THEN 
		expectedState
			dictionaryLookup common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookup should be true
			dictionaryLookupInvalid common.rootContainer.mainView.boxSettingsView.boxSettings.dictionaryLookupInvalid should be false
			givenLanguage common.rootContainer.mainView.boxSettingsView.boxSettings.givenLanguage should be "de"
			wantedLanguage common.rootContainer.mainView.boxSettingsView.boxSettings.wantedLanguage should be "en"
		verifications
			saveEnabled
			givenLanguageEnabled
			wantedLanguageEnabled
		
CreateRootCategory
	GIVEN WantedLanguageChanged
	WHEN box.CreateRootCategory
		squishyValues {
			uuid "box-${testId}"
		}
	THEN 
		expectedState 
			boxList common.rootContainer.mainView.dashboardView.boxList should be [
				{
					boxId: "box-${testId}",
					categoryId: "box-${testId}",
					categoryName: "categoryName",
					countsPerDayNextWeek: [
						0,0,0,0,0,0,0		
					],
					maxCardsPerDay: 8,
					openTodaysCards: 0,
					quality0Count: 0,
					quality1Count: 0,
					quality2Count: 0,
					quality3Count: 0,
					quality4Count: 0,
					quality5Count: 0,
					categoryAuthor: "username-${testId}",
					reverse: false,
					editable: true,
					archived: false
				}
			]
			deleteBox common.rootContainer.mainView.dashboardView.deleteBox should be {
				confirmDelete: false,
				boxId: null
			}
		
CreateRootCategoryWithDefault
	GIVEN CategoryNameChanged
	WHEN box.CreateRootCategory
		squishyValues {
			uuid "box-${testId}"
		}
	THEN 
		expectedState 
			boxList common.rootContainer.mainView.dashboardView.boxList should be [
				{
					boxId: "box-${testId}",
					categoryId: "box-${testId}",
					categoryName: "categoryName",
					countsPerDayNextWeek: [
						0,0,0,0,0,0,0		
					],
					maxCardsPerDay: 8,
					openTodaysCards: 0,
					quality0Count: 0,
					quality1Count: 0,
					quality2Count: 0,
					quality3Count: 0,
					quality4Count: 0,
					quality5Count: 0,
					categoryAuthor: "username-${testId}",
					reverse: false,
					editable: true,
					archived: false
				}
			]
			deleteBox common.rootContainer.mainView.dashboardView.deleteBox should be {
				confirmDelete: false,
				boxId: null
			}
		