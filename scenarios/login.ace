HttpClient loginscenarios

scenarios


A_UsernameChanged
	GIVEN commonscenarios.A_NoUser
	WHEN login.UsernameChanged(username: "username-${testId}")
	THEN 
		expectedState 
			username common.rootContainer.mainView.loginView.username shouldBe "username-${testId}"
			
B_PasswordChanged
	GIVEN A_UsernameChanged
	WHEN login.PasswordChanged(password: "password")
	THEN 
		expectedState 
			password common.rootContainer.mainView.loginView.password shouldBe "5f4dcc3b5aa765d61d8327deb882cf99"
			
C_ToggleSaveInLocalStorage
	GIVEN B_PasswordChanged
	WHEN login.ToggleSaveInLocalStorage()
	THEN 
		expectedState 
			saveInLocalStorageIsTrue common.rootContainer.mainView.loginView.saveInLocalStorage shouldBe true
			
D_ToggleSaveInLocalStorageTwice
	GIVEN C_ToggleSaveInLocalStorage
	WHEN login.ToggleSaveInLocalStorage()
	THEN 
		expectedState 
			saveInLocalStorageIsFalse common.rootContainer.mainView.loginView.saveInLocalStorage shouldBe false
			
E_Login
	GIVEN 
		commonscenarios.D_Logout
		B_PasswordChanged
	WHEN login.Login
	THEN 
		expectedState 
			userLoggedIn common.rootContainer.loggedInUser shouldBe {
				password: "5f4dcc3b5aa765d61d8327deb882cf99",
				username: "username-${testId}"
			}
			role common.rootContainer.role shouldBe "STUDENT"
		verifications
			loginDataWasNotSetInLocalStorage
			
F_LoginWithSaveInLocalStorage
	GIVEN 
		commonscenarios.D_Logout
		C_ToggleSaveInLocalStorage
	WHEN login.Login
	THEN 
		expectedState 
			userLoggedIn common.rootContainer.loggedInUser shouldBe {
				password: "5f4dcc3b5aa765d61d8327deb882cf99",
				username: "username-${testId}"
			}
			role common.rootContainer.role shouldBe "STUDENT"
		verifications
			loginDataWasSetInLocalStorage
			
G_LoginUnauthorized
	GIVEN B_PasswordChanged
	WHEN login.Login
	THEN 
		expectedState 
			loggedInUserIsNotSet common.rootContainer.loggedInUser shouldBe null
			usernameInLocalStorateWasNotSet common.rootContainer.username shouldBe undefined
			passwordInLocalStorateWasNotSet common.rootContainer.password shouldBe undefined
			errorShown common.rootContainer.messages shouldBe [
				{ 
					code: 401,
					text: "Unauthorized",
					textKey: "loginFailed",
					type: "error",
					visible: true,
					id: 0
				}
			]
			
H_LoginUnauthorizedSecondTime
	GIVEN G_LoginUnauthorized
	WHEN login.Login
	THEN 
		expectedState 
			loggedInUserIsNotSet common.rootContainer.loggedInUser shouldBe null
			usernameInLocalStorateWasNotSet common.rootContainer.username shouldBe undefined
			passwordInLocalStorateWasNotSet common.rootContainer.password shouldBe undefined
			errorShown common.rootContainer.messages shouldBe [
				{ 
					code: 401,
					text: "Unauthorized",
					textKey: "loginFailed",
					type: "error",
					visible: true,
					id: 0
				},
				{ 
					code: 401,
					text: "Unauthorized",
					textKey: "loginFailed",
					type: "error",
					visible: true,
					id: 1
				}
			]
