HttpClient loginscenarios

scenarios

UsernameChanged
	GIVEN commonscenarios.Init
	WHEN login.UsernameChanged(username: "username-${testId}")
	THEN 
		expectedState 
			username common.rootContainer.mainView.loginView.username should be "username-${testId}"

			
PasswordChanged
	GIVEN UsernameChanged
	WHEN login.PasswordChanged(password: "password")
	THEN 
		expectedState 
			password common.rootContainer.mainView.loginView.password should be "5f4dcc3b5aa765d61d8327deb882cf99"
			
ToggleSaveInLocalStorage
	GIVEN PasswordChanged
	WHEN login.ToggleSaveInLocalStorage()
	THEN 
		expectedState 
			saveInLocalStorageIsTrue common.rootContainer.mainView.loginView.saveInLocalStorage should be true
			
ToggleSaveInLocalStorageTwice
	GIVEN ToggleSaveInLocalStorage
	WHEN login.ToggleSaveInLocalStorage()
	THEN 
		expectedState 
			saveInLocalStorageIsFalse common.rootContainer.mainView.loginView.saveInLocalStorage should be false
			
Login
	GIVEN 
		commonscenarios.Logout
		PasswordChanged
	WHEN login.Login
	THEN 
		expectedState 
			userLoggedIn common.rootContainer.loggedInUser.username should be "username-${testId}"
			tokenWasSet common.rootContainer.loggedInUser.token should not be null
		verifications
			loginDataWasNotSetInLocalStorage
			
LoginWithSaveInLocalStorage
	GIVEN 
		commonscenarios.Logout
		ToggleSaveInLocalStorage
	WHEN login.Login
	THEN 
		expectedState 
			userLoggedIn common.rootContainer.loggedInUser.username should be "username-${testId}"
			tokenWasSet common.rootContainer.loggedInUser.token should not be null
		verifications
			loginDataWasSetInLocalStorage
			
LoginUnauthorized
	GIVEN PasswordChanged
	WHEN login.Login
	THEN 
		expectedState 
			loggedInUserIsNotSet common.rootContainer.loggedInUser should be null
			usernameInLocalStorateWasNotSet common.rootContainer.token should be undefined
			errorShown common.rootContainer.messages should be [
				{ 
					code: 401,
					text: "Unauthorized",
					textKey: "loginFailed",
					type: "error",
					visible: true,
					id: 0
				}
			]
			
LoginUnauthorizedSecondTime
	GIVEN LoginUnauthorized
	WHEN login.Login
		delayInMillis 50
	THEN 
		expectedState 
			loggedInUserIsNotSet common.rootContainer.loggedInUser should be null
			usernameInLocalStorateWasNotSet common.rootContainer.token should be undefined
			errorShown common.rootContainer.messages should be [
				{ 
					code: 401,
					text: "Unauthorized",
					textKey: "loginFailed",
					type: "error",
					visible: true,
					id: 0
				},
				{ 
					code: 401,
					text: "Unauthorized",
					textKey: "loginFailed",
					type: "error",
					visible: true,
					id: 1
				}
			]
