author

target ES6

ACE {
	async LoadCategories preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) { 
		on ok (
			Categories.render 
			Categories.resetEditCardValues 
			Categories.resetEditCategoryValues 
			Categories.resetNewCardValues 
			Categories.resetNewCategoryValues
			Categories.resetDuplicates
			Categories.resetFilter
			Categories.resetGiven
			Categories.resetWanted
			Categories.hideDictionary
		)
		on unauthorized ( common.Common.displayError ) triggers (common.Logout)
	}
	async CreateCategory preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Categories.resetNewCategoryValues) triggers (LoadCategories)
		on unauthorized ( common.Common.displayError ) triggers (common.Logout)
	}
	async UpdateCategory preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Categories.resetEditCategoryValues) triggers (LoadCategories)
		on unauthorized ( common.Common.displayError ) triggers (common.Logout)
	}
	async DeleteCategory preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Categories.hideConfirmCategoryDelete) triggers (LoadCategories)
		on unauthorized ( common.Common.displayError Categories.hideConfirmCategoryDelete) triggers (common.Logout)
	}
	
	NameOfNewCategoryChanged {
		on ok (Categories.nameOfNewCategoryChanged)
	}
	CancelNewCategory {
		on ok (Categories.resetNewCategoryValues )
	}
	
	NameOfEditedCategoryChanged {
		on ok (Categories.nameOfEditedCategoryChanged)
	}
	CancelEditCategory {
		on ok (Categories.resetEditCategoryValues)
	}
	EditCategory {
		on ok (Categories.editCategory)
	}
	DeleteCategoryClick {
		on ok (Categories.displayConfirmCategoryDelete)
	}
	CancelDeleteCategory {
		on ok (Categories.hideConfirmCategoryDelete)
	}
	
	async CreateCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Categories.resetNewCardValues) triggers (LoadCategories)
		on unauthorized ( common.Common.displayError ) triggers (common.Logout)
	}
	async UpdateCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Categories.resetEditCardValues) triggers (LoadCategories)
		on unauthorized ( common.Common.displayError ) triggers (common.Logout)
	}
	async DeleteCard preUpdateUI (common.Common.displaySpinner) postUpdateUI (common.Common.hideSpinner) {
		on ok (Categories.hideConfirmCardDelete) triggers (LoadCategories)
		on unauthorized ( common.Common.displayError Categories.hideConfirmCardDelete) triggers (common.Logout)
	}
	
	GivenOfNewCardChanged {
		on ok (Categories.givenOfNewCardChanged) triggers (SearchDuplicateCards)
	}
	async SearchDuplicateCards preUpdateUI (Categories.displayNewCardSpinner) postUpdateUI (Categories.hideNewCardSpinner) {
		on ok (Categories.initDuplicates)
		on tooShort (Categories.resetDuplicates)
		on unauthorized ( common.Common.displayError Categories.hideConfirmCardDelete) triggers (common.Logout)
	}
	WantedOfNewCardChanged {
		on ok (Categories.wantedOfNewCardChanged) triggers (SearchDuplicateCards)
	}
	CancelNewCard {
		on ok (Categories.resetNewCardValues Categories.hideDictionary)
	}
	
	GivenOfEditedCardChanged {
		on ok (Categories.givenOfEditedCardChanged)
	}
	WantedOfEditedCardChanged {
		on ok (Categories.wantedOfEditedCardChanged)
	}
	CancelEditCard {
		on ok (Categories.resetEditCardValues)
	}
	EditCard {
		on ok (Categories.editCard)
	}
	DeleteCardClick {
		on ok (Categories.displayConfirmCardDelete)
	}
	CancelDeleteCard {
		on ok (Categories.hideConfirmCardDelete)
	}
	
	FilterCards {
		on ok (Categories.filterChanged)
	}
	
	async Translate preUpdateUI (Categories.displayTranslateSpinner) postUpdateUI (Categories.hideTranslateSpinner) {
		on wantedFetched (Categories.wantedOfNewCardChanged Categories.displayDictionary ) triggers (SearchDuplicateCards)
		on givenFetched (Categories.givenOfNewCardChanged Categories.displayDictionary ) triggers (SearchDuplicateCards)
		on error
		on empty
		on targetNotEmtpy
	}
	
	ToggleDictionaryLookupOfNewCategory {
		on ok (Categories.toggleDictionaryLookupOfNewCategory)
	}
	
	ToggleDictionaryLookupOfEditedCategory {
		on ok (Categories.toggleDictionaryLookupOfEditedCategory)
	}
	
	GivenLanguageOfNewCategoryChanged {
		on ok (Categories.givenLanguageOfNewCategoryChanged)
	}
	
	GivenLanguageOfEditedCategoryChanged {
		on ok (Categories.givenLanguageOfEditedCategoryChanged) 
	}
	
	WantedLanguageOfNewCategoryChanged {
		on ok (Categories.wantedLanguageOfNewCategoryChanged)
	}
	
	WantedLanguageOfEditedCategoryChanged {
		on ok (Categories.wantedLanguageOfEditedCategoryChanged)
	}
	
	ToggelInputOrder {
		on ok (Categories.toggelInputOrder)
	}
	
	ToggelUseDictionary {
		on ok (Categories.toggleUseDictionary)
	}
	
	LoadWantedImageOfNewCard {
		on ok (Categories.displayImageOfNewCard)
		on error
	}
	
	LoadWantedImageOfEditedCard {
		on ok (Categories.displayImageOfEditedCard)
		on error
	}
	
	RemoveNewCardImage {
		on ok (Categories.removeNewCardImage)
	}
	
	RemoveEditedCardImage {
		on ok (Categories.removeEditedCardImage)
	}
	
}

views {
	Categories {
		render
		nameOfNewCategoryChanged
		resetNewCategoryValues
		nameOfEditedCategoryChanged
		resetEditCategoryValues
		editCategory
		displayConfirmCategoryDelete
		hideConfirmCategoryDelete
		givenOfNewCardChanged
		wantedOfNewCardChanged
		resetNewCardValues
		givenOfEditedCardChanged
		wantedOfEditedCardChanged
		resetEditCardValues
		editCard
		displayConfirmCardDelete
		hideConfirmCardDelete
		displayNewCardSpinner
		hideNewCardSpinner
		displayTranslateSpinner
		hideTranslateSpinner
		initDuplicates
		resetDuplicates
		filterChanged
		toggleDictionaryLookupOfNewCategory
		toggleDictionaryLookupOfEditedCategory
		givenLanguageOfNewCategoryChanged
		givenLanguageOfEditedCategoryChanged
		wantedLanguageOfNewCategoryChanged
		wantedLanguageOfEditedCategoryChanged
		toggelInputOrder
		resetFilter
		resetGiven
		resetWanted
		displayDictionary
		hideDictionary
		toggleUseDictionary
		
		displayUploadSpinner
		hideUploadSpinner
		displayImageOfNewCard
		displayImageOfEditedCard
		removeNewCardImage
		removeEditedCardImage
	}
}