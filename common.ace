common

target ES6

ACE {
	init Init {
		
	}
	Route {
		on ok ( Common.updateHash ) triggers ( Init )
	}
	RouteHome {
		on ok ( Common.updateHash ) triggers ( Init )
	}
	Login {
		on ok (Common.initUserInLocalStorage) triggers ( Route )
		on unauthorized ( Error.renderError ) triggers ( Logout )
	}
	Logout {
		on ok (Common.removeUserFromLocalStorage navigation.Boxes.hideBoxes ) triggers ( Route )
	}
	SaveResult {
		on noCredentials ( Test.renderResult	)
		on resultSaved triggers ( Route	)
	}
	ValidateRequiredField {
		on fieldEmpty ( Validation.fieldEmpty )
		on fieldNotEmpty ( Validation.fieldNotEmpty )
	}
	OpenReallyDeleteDialog {
		on removeCourseFromUser (ReallyDeleteDialog.displayRemoveCourseFromUserDialog)
		on deleteBox (ReallyDeleteDialog.displayDeleteBoxDialog)
		on removedCard (ReallyDeleteDialog.displayRemoveCardFromBoxDialog)
	}
	CloseAllDialogs {
		on ok 
	}
	SwitchLanguage {
		on ok (Common.initLanguageInLocalStorage) triggers (Init)
	}
	RenderLogin {
		on ok (Header.renderLogin)
	}
	RenderLogout {
		on ok (Header.renderLogout)
	}
	RenderHome {
		on ok (navigation.Content.renderPublicCourses)
	}
}

/*
actions {
}

commands {
	Init {
		on publicCourses publishes ( InitOK ) triggers ( navigation.ReadPublicCourses RenderLogin RenderHome )
		on publicLessons publishes (InitOK ) triggers ( navigation.ReadPublicLessons RenderLogin)
		on publicTests publishes (InitOK ) triggers ( navigation.ReadPublicTests RenderLogin)
		on publicTest publishes (InitOK ) triggers ( navigation.ReadPublicTest RenderLogin)
		on privateCourses publishes (InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadStatistics navigation.ReadBoxes RenderLogout)
		on privateLessons publishes (InitOK ) triggers ( navigation.ReadPrivateLessons navigation.ReadBoxes RenderLogout)
		on privateTests publishes (InitOK ) triggers ( navigation.ReadPrivateTests navigation.ReadBoxes RenderLogout)
		on privateTest publishes (InitOK ) triggers ( navigation.ReadPrivateTest navigation.ReadBoxes RenderLogout) 
		on result publishes (InitOK ) triggers ( navigation.ReadResult navigation.ReadBoxes RenderLogout)
		on box publishes (InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes navigation.ReadNextCard RenderLogout)
		on reinforce publishes (InitOK ) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes navigation.ReadReinforceCards RenderLogout)
		on profile publishes (InitOK ) triggers ( profile.OpenProfile navigation.ReadPrivateCourses navigation.ReadBoxes RenderLogout)
		on profileCourses publishes (InitOK ) triggers ( profile.OpenCourseSelection navigation.ReadPrivateCourses navigation.ReadBoxes RenderLogout)
		on profileBoxCreate publishes(InitOK) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.OpenBoxCreation RenderLogout)
		on profileBoxEdit publishes(InitOK) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.LoadBox RenderLogout)
		on profileCourseAdd publishes(InitOK) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.LoadCourses RenderLogout)
		on profilePassword publishes(InitOK) triggers ( navigation.ReadPrivateCourses navigation.ReadBoxes profile.OpenChangePassword RenderLogout)
		on forgotPassword publishes (InitOK) triggers ( navigation.ReadPublicCourses RenderLogin profile.OpenForgotPassword)
		on newPassword publishes (InitOK) triggers ( navigation.ReadPublicCourses RenderLogin profile.OpenNewPassword)
		on register publishes (InitOK) triggers ( navigation.ReadPublicCourses RenderLogin profile.OpenRegistration)
		on confirmEmail triggers (profile.ConfirmEmail) 
	}
	RenderLogin {
	}
	RenderLogout {
	}
	SaveResult {
	}
	ValidateRequiredField {
	}
	OpenReallyDeleteDialog {
	}
	CloseAllDialogs {
	}
	SwitchLanguage {
	}
	RenderHome {
	}
}

events {
	InitOK listenedToBy ( Common.initLanguageInLocalStorage )
	Error listenedToBy ( Error.renderError )
	Message listenedToBy (Message.renderMessage)
} 
*/
views {
	Error {
		renderError
	}
	Message {
		renderMessage
	}
	Common {
		initLanguageInLocalStorage
		updateHash
		initUserInLocalStorage
		removeUserFromLocalStorage
	}
	Header {
		renderLogin
		renderLogout
	}
	Test {
		renderResult
	}
	Validation {
		fieldEmpty
		fieldNotEmpty
	}
	ReallyDeleteDialog {
		displayRemoveCourseFromUserDialog
		displayDeleteBoxDialog
		displayRemoveCardFromBoxDialog
	}
}