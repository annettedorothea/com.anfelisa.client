HttpClient 

common

ACE 
Init 
	appState (hash, username, password )
	on user ( 
		set loggedInUser 
		set language
	) triggers ( InitialLogin )
	on noUser ( 
		reset loggedInUser 
		set language
	) triggers ( RouteChanged )

RouteChanged 
	on login ( 
		set loginView 
	)
	on registration ( 
		set registrationView
	)
	on confirmEmail triggers (registration.ConfirmEmail)
	on forgotPassword ( 
		set forgotPasswordView 
	)
	on resetPassword ( 
		set resetPasswordView 
	)
	on dashboard triggers (box.InitBoxesForDay)
	on categories triggers (category.LoadCategoryTree )
	on profile triggers ( profile.LoadUser )
	on userList triggers (admin.GetAllUsers) 
	on nextCard triggers (box.LoadNextCard)
	on invalid triggers (Route)
	on boxSettings triggers (box.LoadSettings)
	on boxCreate triggers (box.CreateNewBox)
	
Route ( hash ) 
	on ok ( set hash )
	
	
InitialLogin
	call com.anfelisa.user.GetRole
	loadingFlag displaySpinner 
	on ok (set loggedInUser.role) triggers ( RouteChanged )
	on unauthorized triggers ( DisplayError Logout )
	
	
Logout 
	on ok ( 
		reset loggedInUser
		reset username
		reset password
	) triggers ( Route )

DisplayError ( error ) 
	on ok ( set message) 

DisplayErrorAndLogout ( error ) 
	on ok (set message) triggers ( Logout)

DisplayMessage ( messageKey ) 
	on ok (set message) 

ClearToast 
	on ok (reset message)
	
DisplaySaveBugDialog
	on ok (set displaySaveBugDialog)

async CallSaveBug
	on ok triggers (HideSaveBugDialog)

CancelSaveBugDialog
	on ok (set displaySaveBugDialog)

HideSaveBugDialog
	on ok (set displaySaveBugDialog) triggers (DisplayMessage)













	
appState {
	String loggedInUser {
		String username
		String role
		String password
	}
	String hash location.hash
	String username storage
	String password storage
	Boolean displaySpinner
	String language
	texts
	Boolean displaySaveBugDialog
	message {
		String type
		String text
	}
	group {
		loginView {
			String username
			Boolean saveInLocalStorage
		}
		registrationView {
			Boolean displayUsernameSpinner
	        Boolean available
	        String username
	        String email
	        Boolean emailInvalid
	        Boolean passwordMismatch
		}
		forgotPasswordView {
			username
		}
		resetPasswordView {
			token
			passwordMismatch
		}
		dashboardView {
	    	List boxList serverModel com.anfelisa.box.BoxWithStatistics
	        deleteBox {
	            confirmDelete
	            boxId
	        }
		}
		boxSettingsView serverModel com.anfelisa.box.BoxSettings {
	    	maxIntervalInvalid
	    	maxCardsPerDayInvalid
			dictionaryLookupInvalid
			String boxId
			Integer maxInterval
			Integer maxCardsPerDay
			String categoryName
			Boolean dictionaryLookup
			String givenLanguage
			String wantedLanguage
			String categoryId
			
		} 
		profileView {
			username
			email
			role
			showDeleteUserDialog
		}
		userListView serverModel com.anfelisa.user.UserList {
			List userList serverModel com.anfelisa.user.User {
				NotNull String userId 
				NotNull String username
				NotNull String password
				NotNull String email
				NotNull String role
				NotNull Boolean emailConfirmed
			} 
			NotNull Boolean showDeleteUserDialog 
			String usernameToBeDeleted
		}
		cardView {
			cardId
			categoryId
			count
			given
			image
			lastQuality
			rootCategoryId
			scheduledCardId
			reinforceCardId
			scheduledDate
			scoredDate
			wanted
			openTodaysCards
			allTodaysCards
			index
			enableScoreButtons
			displayImage
			boxId
		}
		authorView {
			categoryTree {
				selectedCategory
				rootCategory {
					String additional
				}
				
				displayDeleteCategory
				
				categoryName
				displayEditCategory
				displayNewCategory
				
				dropAllowed
				dropTargetCategoryId
				movedCategory
				
				previewCsv
			}
	        cardView {
		        List cardList
		        naturalInputOrder
		        filter
		        filterNonScheduled
		        editedCard {
		        	cardId
		        	given
		        	wanted
		        	index
		        	image
		        	selectedCardIds
		        }
		        newCard {
		        	given
		        	wanted
		        	index
		        	image
		        	selectedCardIds
		        	file
		        	displaySpinner
		        	displayTranslateSpinner
		        }
		        List cardDuplicates
		        deleteCard {
		        	confirmDelete
		        	cardId
		        }
		        dictionaryValue
		        List selectedCardIds
		        movedCardIds
		        dragTargetCardId
	        }
        }
	}
}