HttpClient

category

ACE

LoadCategoryTree ( rootCategoryId, selectedCategoryId )
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory, 
		common.mainView.authorView.filterNonScheduled,
		common.mainView.authorView.priority
	)
	call com.anfelisa.category.GetCategoryTree
	loadingFlag common.displaySpinner 
	on ok ( 
		set common.mainView.authorView
	) triggers (card.LoadCards)

ExpandTreeItem ( categoryId  )
	fromAppState (common.mainView.authorView.categoryTree.rootCategory)
	on ok (set common.mainView.authorView.categoryTree.rootCategory)

CollapseTreeItem ( categoryId )
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory,
		common.mainView.authorView.categoryTree.selectedCategory
	)
	on ok (
		set common.mainView.authorView.categoryTree.rootCategory
	)
	on selectParentCategory (
		set common.mainView.authorView.categoryTree.rootCategory 
	) triggers( SelectTreeItem )

SelectTreeItem ( categoryId  )
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory
	)
	on ok ( set common.mainView.authorView.categoryTree.selectedCategory) triggers( card.LoadCards )

NewCategoryClick
	on ok (merge common.mainView.authorView.categoryTree)
	
CancelNewCategory
	on ok (merge common.mainView.authorView.categoryTree)
	
CategoryNameChanged ( categoryName )
	on ok (merge common.mainView.authorView.categoryTree)
	
CreateCategory
	fromAppState (
		common.mainView.authorView.categoryTree.categoryName,
		common.mainView.authorView.categoryTree.selectedCategory.categoryId as parentCategoryId,
		common.mainView.authorView.categoryTree.rootCategory.categoryId as rootCategoryId
	)
	call com.anfelisa.category.CreateCategory
	loadingFlag common.displaySpinner 
	on ok (merge common.mainView.authorView.categoryTree) triggers (LoadCategoryTree )
	on error (merge common.mainView.authorView.categoryTree)

DeleteCategoryClick
	on ok (merge common.mainView.authorView.categoryTree)
	
CancelDeleteCategory
	on ok (merge common.mainView.authorView.categoryTree)

DeleteCategory
	fromAppState (
		common.mainView.authorView.categoryTree.selectedCategory.categoryId,
		common.mainView.authorView.categoryTree.selectedCategory.parentCategoryId as selectedCategoryId,
		common.mainView.authorView.categoryTree.rootCategory.categoryId as rootCategoryId
	)
	call com.anfelisa.category.DeleteCategory
	loadingFlag common.displaySpinner 
	on ok (merge common.mainView.authorView.categoryTree) triggers (LoadCategoryTree)
	on error (merge common.mainView.authorView.categoryTree)

EditCategoryClick
	fromAppState (common.mainView.authorView.categoryTree.selectedCategory.categoryName)
	on ok (merge common.mainView.authorView.categoryTree)
	
CancelEditCategory
	on ok (merge common.mainView.authorView.categoryTree)
	
UpdateCategory
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory.categoryId as rootCategoryId,
		common.mainView.authorView.categoryTree.selectedCategory.categoryId as selectedCategoryId,
		common.mainView.authorView.categoryTree.selectedCategory.categoryId,
		common.mainView.authorView.categoryTree.categoryName
	)
	call com.anfelisa.category.UpdateCategory
	loadingFlag common.displaySpinner 
	on ok (merge common.mainView.authorView.categoryTree) triggers (LoadCategoryTree)
	on error (merge common.mainView.authorView.categoryTree)

CheckDropAllowed ( categoryId, altKey, depth )
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory,
		common.mainView.authorView.categoryTree.movedCategory,
		common.mainView.authorView.categoryTree.selectedCategory
	)
	on ok (merge common.mainView.authorView.categoryTree)

ItemDropped
	fromAppState (common.mainView.authorView.categoryTree.movedCategory)
	on card triggers (card.MoveCards)
	on category triggers (MoveCategory)

MoveCategoryStarted ( movedCategoryId )
	fromAppState(common.mainView.authorView.categoryTree.rootCategory)
	on ok (merge common.mainView.authorView.categoryTree)
	
MoveCategory
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory.categoryId as rootCategoryId,
		common.mainView.authorView.categoryTree.dropTargetCategoryId as selectedCategoryId,
		common.mainView.authorView.categoryTree.dropTargetCategoryId as targetCategoryId,
		common.mainView.authorView.categoryTree.movedCategory.categoryId as movedCategoryId
	)
 	call com.anfelisa.category.MoveCategory
	loadingFlag common.displaySpinner 
	on ok ( 
		set common.mainView.authorView.categoryTree.movedCategory
	) triggers (category.LoadCategoryTree)

ChangeOrderCategory
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory.categoryId as rootCategoryId,
		common.mainView.authorView.categoryTree.movedCategory.categoryId as selectedCategoryId,
		common.mainView.authorView.categoryTree.dropTargetCategoryId as targetCategoryId,
		common.mainView.authorView.categoryTree.movedCategory.categoryId as movedCategoryId
	)
 	call com.anfelisa.category.ChangeOrderCategory
	loadingFlag common.displaySpinner 
	on ok ( 
		set common.mainView.authorView.categoryTree.movedCategory
	) triggers (category.LoadCategoryTree)

PreviewCsv ( csv )
	on ok (
		set common.mainView.authorView.categoryTree.previewCsv
	) 
	
CancelPreviewCsv
	on ok (set common.mainView.authorView.categoryTree.previewCsv)
		
SwapPreviewCsv
	fromAppState (common.mainView.authorView.categoryTree.previewCsv)
	on ok (set common.mainView.authorView.categoryTree.previewCsv)
	
ImportCsv
	fromAppState (
		common.mainView.authorView.categoryTree.rootCategory.categoryId as rootCategoryId,
		common.mainView.authorView.categoryTree.movedCategory.categoryId as selectedCategoryId,
		common.mainView.authorView.categoryTree.previewCsv,
		common.mainView.authorView.categoryTree.selectedCategory.categoryId
	)
	call com.anfelisa.card.ImportCsv
	loadingFlag common.displaySpinner 
	on ok ( 
		set common.mainView.authorView.categoryTree.previewCsv
	) triggers (card.LoadCards)
	
FilterNonScheduledCards
	fromAppState (
		common.mainView.authorView.filterNonScheduled, 
		common.mainView.authorView.categoryTree.selectedCategory
	)
	on ok (
		set common.mainView.authorView.filterNonScheduled
	) triggers (LoadCategoryTree)

PriorityChanged(priority)
	fromAppState (
		common.mainView.authorView.filterNonScheduled, 
		common.mainView.authorView.priority as actualPriority,
		common.mainView.authorView.categoryTree.selectedCategory
	)
	on ok (set common.mainView.authorView.priority)
	triggers (LoadCategoryTree)

		

