/********************************************************************************
 * generated by de.acegen 1.2.1
 ********************************************************************************/



const { By, until } = require('selenium-webdriver');

const CommonActionIds = require("../gen/actionIds/common/CommonActionIds");
const LoginActionIds = require("../gen/actionIds/login/LoginActionIds");
const RegistrationActionIds = require("../gen/actionIds/registration/RegistrationActionIds");

module.exports = {
	invokeAction: async function(driver, action, args) {
		if (CommonActionIds.init === action) {
			console.log("+ init");
			await driver.get('http://127.0.0.1:8888/');
			await driver.wait(until.elementLocated(By.id('username')), 5000);
			console.log("- init");
		}
		if (CommonActionIds.route === action) {
			if (args[0] === "#registration") {
				await driver.wait(until.elementLocated(By.id('registration')), 5000);
				await driver.findElement(By.id('registration')).click();
			}
		}
		if (CommonActionIds.logout === action) {
			await driver.wait(until.elementLocated(By.id('logout')), 5000);
			await driver.findElement(By.id('logout')).click();
		}

		if (LoginActionIds.usernameChanged === action) {
			console.log("+ usernameChanged");
			await driver.wait(until.elementLocated(By.id('username')), 5000);
			await driver.findElement(By.id('username')).sendKeys(args[0]);
			console.log("- usernameChanged");
		}
		if (LoginActionIds.passwordChanged === action) {
			await driver.wait(until.elementLocated(By.id('password')), 5000);
			await driver.findElement(By.id('password')).sendKeys(args[0]);
		}
		if (LoginActionIds.toggleSaveInLocalStorage === action) {
			await driver.wait(until.elementLocated(By.id('saveInLocalStorage')), 5000);
			await driver.findElement(By.id('saveInLocalStorage')).click();
		}
		if (LoginActionIds.login === action) {
			await driver.wait(until.elementLocated(By.id('login')), 5000);
			await driver.findElement(By.id('login')).click();
		}

		if (RegistrationActionIds.usernameChanged === action) {
			await driver.wait(until.elementLocated(By.id('username')), 5000);
			await driver.findElement(By.id('username')).sendKeys(args[0]);
		}
		if (RegistrationActionIds.passwordChanged === action) {
			await driver.wait(until.elementLocated(By.id('password')), 5000);
			await driver.findElement(By.id('password')).sendKeys(args[0]);
		}
		if (RegistrationActionIds.passwordRepetitionChanged === action) {
			await driver.wait(until.elementLocated(By.id('passwordRepetition')), 5000);
			await driver.findElement(By.id('passwordRepetition')).sendKeys(args[0]);
		}
		if (RegistrationActionIds.emailChanged === action) {
			await driver.wait(until.elementLocated(By.id('email')), 5000);
			await driver.findElement(By.id('email')).sendKeys(args[0]);
		}
		if (RegistrationActionIds.registerUser === action) {
			await driver.wait(until.elementLocated(By.id('register')), 5000);
			await driver.findElement(By.id('register')).click();
		}
		if (RegistrationActionIds.confirmEmail === action) {
			await driver.get(`http://127.0.0.1:8888/#confirmemail/${args[0]}/${args[1]}`);
			await driver.wait(until.elementLocated(By.id('rootContainer')), 5000);
		}
	},
	
	waitInMillis: async function(millis) {
		return new Promise(function(resolve){
			setTimeout(resolve,millis);
		});
	},
	
	getAppState: async function(driver) {
		return await driver.executeScript('return Anfelisa.getAppState()');
	},
	
	generateTestId: function() {
	    let d = new Date().getTime();
	    return 'xxxxxxxx'.replace(/[xy]/g, function (c) {
	        let r = (d + Math.random() * 16) % 16 | 0;
	        d = Math.floor(d / 16);
	        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);
	    });
	}
}



/******* S.D.G. *******/




