/********************************************************************************
 * generated by de.acegen 1.1.0
 ********************************************************************************/




import AppUtils from "../../src/app/AppUtils";

export let appState;

import { setRootContainerState } from "../components/RootContainerComponent";
import { setLoggedInUserState } from "../components/rootContainer/LoggedInUserComponent";
import { setSpinnerState } from "../components/rootContainer/SpinnerComponent";
import { setSaveBugDialogState } from "../components/rootContainer/SaveBugDialogComponent";
import { setVersionMismatchDialogState } from "../components/rootContainer/VersionMismatchDialogComponent";
import { setVersionMismatchErrorDialogState } from "../components/rootContainer/VersionMismatchErrorDialogComponent";
import { setMessageState } from "../components/rootContainer/MessageComponent";
import { setMainViewState } from "../components/rootContainer/MainViewComponent";
import { setLoginViewState } from "../components/rootContainer/mainView/LoginViewComponent";
import { setRegistrationViewState } from "../components/rootContainer/mainView/RegistrationViewComponent";
import { setForgotPasswordViewState } from "../components/rootContainer/mainView/ForgotPasswordViewComponent";
import { setResetPasswordViewState } from "../components/rootContainer/mainView/ResetPasswordViewComponent";
import { setDashboardViewState } from "../components/rootContainer/mainView/DashboardViewComponent";
import { setDeleteBoxState } from "../components/rootContainer/mainView/dashboardView/DeleteBoxComponent";
import { setBoxSettingsViewState } from "../components/rootContainer/mainView/BoxSettingsViewComponent";
import { setAllActiveCardsViewState } from "../components/rootContainer/mainView/AllActiveCardsViewComponent";
import { setProfileViewState } from "../components/rootContainer/mainView/ProfileViewComponent";
import { setUserListViewState } from "../components/rootContainer/mainView/UserListViewComponent";
import { setQueryCardViewState } from "../components/rootContainer/mainView/QueryCardViewComponent";
import { setAuthorViewState } from "../components/rootContainer/mainView/AuthorViewComponent";
import { setCategoryTreeState } from "../components/rootContainer/mainView/authorView/CategoryTreeComponent";
import { setSelectedCategoryState } from "../components/rootContainer/mainView/authorView/categoryTree/SelectedCategoryComponent";
import { setRootCategoryState } from "../components/rootContainer/mainView/authorView/categoryTree/RootCategoryComponent";
import { setMovedCategoryState } from "../components/rootContainer/mainView/authorView/categoryTree/MovedCategoryComponent";
import { setCardViewState } from "../components/rootContainer/mainView/authorView/CardViewComponent";
import { setEditedCardState } from "../components/rootContainer/mainView/authorView/cardView/EditedCardComponent";
import { setNewCardState } from "../components/rootContainer/mainView/authorView/cardView/NewCardComponent";
import { setDeleteCardState } from "../components/rootContainer/mainView/authorView/cardView/DeleteCardComponent";

export function getAppState() {
	return AppUtils.deepCopy(appState);
}

export function setInitialAppState(initialAppState) {
	appState = AppUtils.deepCopy(initialAppState);
}

export function get_rootContainer_loggedInUser() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.loggedInUser) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.loggedInUser);
}

export function set_rootContainer_loggedInUser(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.loggedInUser = eventData.loggedInUser;
	const newAppState = getAppState();
	setLoggedInUserState(AppUtils.deepCopy(appState.rootContainer.loggedInUser));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_loggedInUser(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.loggedInUser) {
		appState.rootContainer.loggedInUser = {};
	}
	if (eventData.username !== undefined) {
		appState.rootContainer.loggedInUser.username = eventData.username;
	}
	if (eventData.role !== undefined) {
		appState.rootContainer.loggedInUser.role = eventData.role;
	}
	if (eventData.password !== undefined) {
		appState.rootContainer.loggedInUser.password = eventData.password;
	}
	const newAppState = getAppState();
	setLoggedInUserState(AppUtils.deepCopy(appState.rootContainer.loggedInUser));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loggedInUser_username() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.loggedInUser) {
		return undefined;
	}
	return appState.rootContainer.loggedInUser.username;
}

export function set_rootContainer_loggedInUser_username(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.loggedInUser) {
		appState.rootContainer.loggedInUser = {};
	}
	appState.rootContainer.loggedInUser.username = eventData.username;
	const newAppState = getAppState();
	setLoggedInUserState(AppUtils.deepCopy(appState.rootContainer.loggedInUser));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loggedInUser_role() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.loggedInUser) {
		return undefined;
	}
	return appState.rootContainer.loggedInUser.role;
}

export function set_rootContainer_loggedInUser_role(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.loggedInUser) {
		appState.rootContainer.loggedInUser = {};
	}
	appState.rootContainer.loggedInUser.role = eventData.role;
	const newAppState = getAppState();
	setLoggedInUserState(AppUtils.deepCopy(appState.rootContainer.loggedInUser));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loggedInUser_password() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.loggedInUser) {
		return undefined;
	}
	return appState.rootContainer.loggedInUser.password;
}

export function set_rootContainer_loggedInUser_password(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.loggedInUser) {
		appState.rootContainer.loggedInUser = {};
	}
	appState.rootContainer.loggedInUser.password = eventData.password;
	const newAppState = getAppState();
	setLoggedInUserState(AppUtils.deepCopy(appState.rootContainer.loggedInUser));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_hash() {
	return location.hash;
}

export function set_rootContainer_hash(eventData) {
	location.hash = eventData.hash;
	const newAppState = getAppState();
	setRootContainerState(AppUtils.deepCopy(appState.rootContainer));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_username() {
	return localStorage.getItem("username");
}

export function set_rootContainer_username(eventData) {
	if (eventData.username) {
		localStorage.setItem("username", eventData.username);
	} else {
		localStorage.removeItem("username");
	}
	const newAppState = getAppState();
	setRootContainerState(AppUtils.deepCopy(appState.rootContainer));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_password() {
	return localStorage.getItem("password");
}

export function set_rootContainer_password(eventData) {
	if (eventData.password) {
		localStorage.setItem("password", eventData.password);
	} else {
		localStorage.removeItem("password");
	}
	const newAppState = getAppState();
	setRootContainerState(AppUtils.deepCopy(appState.rootContainer));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_spinner() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.spinner) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.spinner);
}

export function set_rootContainer_spinner(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.spinner = eventData.spinner;
	const newAppState = getAppState();
	setSpinnerState(AppUtils.deepCopy(appState.rootContainer.spinner));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_spinner(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.spinner) {
		appState.rootContainer.spinner = {};
	}
	if (eventData.display !== undefined) {
		appState.rootContainer.spinner.display = eventData.display;
	}
	const newAppState = getAppState();
	setSpinnerState(AppUtils.deepCopy(appState.rootContainer.spinner));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_spinner_display() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.spinner) {
		return undefined;
	}
	return appState.rootContainer.spinner.display;
}

export function set_rootContainer_spinner_display(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.spinner) {
		appState.rootContainer.spinner = {};
	}
	appState.rootContainer.spinner.display = eventData.display;
	const newAppState = getAppState();
	setSpinnerState(AppUtils.deepCopy(appState.rootContainer.spinner));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_language() {
	if (!appState.rootContainer) {
		return undefined;
	}
	return appState.rootContainer.language;
}

export function set_rootContainer_language(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.language = eventData.language;
	const newAppState = getAppState();
	setRootContainerState(AppUtils.deepCopy(appState.rootContainer));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_saveBugDialog() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.saveBugDialog) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.saveBugDialog);
}

export function set_rootContainer_saveBugDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.saveBugDialog = eventData.saveBugDialog;
	const newAppState = getAppState();
	setSaveBugDialogState(AppUtils.deepCopy(appState.rootContainer.saveBugDialog));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_saveBugDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.saveBugDialog) {
		appState.rootContainer.saveBugDialog = {};
	}
	if (eventData.display !== undefined) {
		appState.rootContainer.saveBugDialog.display = eventData.display;
	}
	const newAppState = getAppState();
	setSaveBugDialogState(AppUtils.deepCopy(appState.rootContainer.saveBugDialog));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_saveBugDialog_display() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.saveBugDialog) {
		return undefined;
	}
	return appState.rootContainer.saveBugDialog.display;
}

export function set_rootContainer_saveBugDialog_display(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.saveBugDialog) {
		appState.rootContainer.saveBugDialog = {};
	}
	appState.rootContainer.saveBugDialog.display = eventData.display;
	const newAppState = getAppState();
	setSaveBugDialogState(AppUtils.deepCopy(appState.rootContainer.saveBugDialog));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_versionMismatchDialog() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.versionMismatchDialog) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.versionMismatchDialog);
}

export function set_rootContainer_versionMismatchDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.versionMismatchDialog = eventData.versionMismatchDialog;
	const newAppState = getAppState();
	setVersionMismatchDialogState(AppUtils.deepCopy(appState.rootContainer.versionMismatchDialog));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_versionMismatchDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.versionMismatchDialog) {
		appState.rootContainer.versionMismatchDialog = {};
	}
	if (eventData.display !== undefined) {
		appState.rootContainer.versionMismatchDialog.display = eventData.display;
	}
	const newAppState = getAppState();
	setVersionMismatchDialogState(AppUtils.deepCopy(appState.rootContainer.versionMismatchDialog));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_versionMismatchDialog_display() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.versionMismatchDialog) {
		return undefined;
	}
	return appState.rootContainer.versionMismatchDialog.display;
}

export function set_rootContainer_versionMismatchDialog_display(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.versionMismatchDialog) {
		appState.rootContainer.versionMismatchDialog = {};
	}
	appState.rootContainer.versionMismatchDialog.display = eventData.display;
	const newAppState = getAppState();
	setVersionMismatchDialogState(AppUtils.deepCopy(appState.rootContainer.versionMismatchDialog));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_versionMismatchErrorDialog() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.versionMismatchErrorDialog) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.versionMismatchErrorDialog);
}

export function set_rootContainer_versionMismatchErrorDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.versionMismatchErrorDialog = eventData.versionMismatchErrorDialog;
	const newAppState = getAppState();
	setVersionMismatchErrorDialogState(AppUtils.deepCopy(appState.rootContainer.versionMismatchErrorDialog));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_versionMismatchErrorDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.versionMismatchErrorDialog) {
		appState.rootContainer.versionMismatchErrorDialog = {};
	}
	if (eventData.display !== undefined) {
		appState.rootContainer.versionMismatchErrorDialog.display = eventData.display;
	}
	const newAppState = getAppState();
	setVersionMismatchErrorDialogState(AppUtils.deepCopy(appState.rootContainer.versionMismatchErrorDialog));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_versionMismatchErrorDialog_display() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.versionMismatchErrorDialog) {
		return undefined;
	}
	return appState.rootContainer.versionMismatchErrorDialog.display;
}

export function set_rootContainer_versionMismatchErrorDialog_display(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.versionMismatchErrorDialog) {
		appState.rootContainer.versionMismatchErrorDialog = {};
	}
	appState.rootContainer.versionMismatchErrorDialog.display = eventData.display;
	const newAppState = getAppState();
	setVersionMismatchErrorDialogState(AppUtils.deepCopy(appState.rootContainer.versionMismatchErrorDialog));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_message() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.message) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.message);
}

export function set_rootContainer_message(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	appState.rootContainer.message = eventData.message;
	const newAppState = getAppState();
	setMessageState(AppUtils.deepCopy(appState.rootContainer.message));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_message(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.message) {
		appState.rootContainer.message = {};
	}
	if (eventData.type !== undefined) {
		appState.rootContainer.message.type = eventData.type;
	}
	if (eventData.text !== undefined) {
		appState.rootContainer.message.text = eventData.text;
	}
	const newAppState = getAppState();
	setMessageState(AppUtils.deepCopy(appState.rootContainer.message));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_message_type() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.message) {
		return undefined;
	}
	return appState.rootContainer.message.type;
}

export function set_rootContainer_message_type(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.message) {
		appState.rootContainer.message = {};
	}
	appState.rootContainer.message.type = eventData.type;
	const newAppState = getAppState();
	setMessageState(AppUtils.deepCopy(appState.rootContainer.message));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_message_text() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.message) {
		return undefined;
	}
	return appState.rootContainer.message.text;
}

export function set_rootContainer_message_text(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.message) {
		appState.rootContainer.message = {};
	}
	appState.rootContainer.message.text = eventData.text;
	const newAppState = getAppState();
	setMessageState(AppUtils.deepCopy(appState.rootContainer.message));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_privacyPolicyView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	return appState.rootContainer.mainView;
}

export function set_rootContainer_privacyPolicyView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.privacyPolicyView) {
		appState.rootContainer.mainView = eventData.privacyPolicyView;
		appState.rootContainer.mainView.isPrivacyPolicyView = true;
	} else {
		appState.rootContainer.mainView = {
			isPrivacyPolicyView : true
		};
	}
	const newAppState = getAppState();
	setRootContainerState(AppUtils.deepCopy(appState.rootContainer));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loginView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isLoginView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_loginView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.loginView) {
		appState.rootContainer.mainView = eventData.loginView;
		appState.rootContainer.mainView.isLoginView = true;
	} else {
		appState.rootContainer.mainView = {
			isLoginView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_loginView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isLoginView : true
		};
	}
	if (eventData.username !== undefined) {
		appState.rootContainer.mainView.username = eventData.username;
	}
	if (eventData.password !== undefined) {
		appState.rootContainer.mainView.password = eventData.password;
	}
	if (eventData.saveInLocalStorage !== undefined) {
		appState.rootContainer.mainView.saveInLocalStorage = eventData.saveInLocalStorage;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loginView_username() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isLoginView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.username;
}

export function set_rootContainer_loginView_username(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isLoginView !== true) {
		appState.rootContainer.mainView = {
			isLoginView : true
		};
	}
	appState.rootContainer.mainView.username = eventData.username;
	const newAppState = getAppState();
	setLoginViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loginView_password() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isLoginView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.password;
}

export function set_rootContainer_loginView_password(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isLoginView !== true) {
		appState.rootContainer.mainView = {
			isLoginView : true
		};
	}
	appState.rootContainer.mainView.password = eventData.password;
	const newAppState = getAppState();
	setLoginViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_loginView_saveInLocalStorage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isLoginView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.saveInLocalStorage;
}

export function set_rootContainer_loginView_saveInLocalStorage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isLoginView !== true) {
		appState.rootContainer.mainView = {
			isLoginView : true
		};
	}
	appState.rootContainer.mainView.saveInLocalStorage = eventData.saveInLocalStorage;
	const newAppState = getAppState();
	setLoginViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isRegistrationView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_registrationView(eventData) {
	console.log("set_rootContainer_registrationView");
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.registrationView) {
		appState.rootContainer.mainView = eventData.registrationView;
		appState.rootContainer.mainView.isRegistrationView = true;
	} else {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_registrationView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	if (eventData.displayUsernameSpinner !== undefined) {
		appState.rootContainer.mainView.displayUsernameSpinner = eventData.displayUsernameSpinner;
	}
	if (eventData.available !== undefined) {
		appState.rootContainer.mainView.available = eventData.available;
	}
	if (eventData.username !== undefined) {
		appState.rootContainer.mainView.username = eventData.username;
	}
	if (eventData.email !== undefined) {
		appState.rootContainer.mainView.email = eventData.email;
	}
	if (eventData.emailInvalid !== undefined) {
		appState.rootContainer.mainView.emailInvalid = eventData.emailInvalid;
	}
	if (eventData.passwordMismatch !== undefined) {
		appState.rootContainer.mainView.passwordMismatch = eventData.passwordMismatch;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView_displayUsernameSpinner() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isRegistrationView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.displayUsernameSpinner;
}

export function set_rootContainer_registrationView_displayUsernameSpinner(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isRegistrationView !== true) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	appState.rootContainer.mainView.displayUsernameSpinner = eventData.displayUsernameSpinner;
	const newAppState = getAppState();
	setRegistrationViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView_available() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isRegistrationView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.available;
}

export function set_rootContainer_registrationView_available(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isRegistrationView !== true) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	appState.rootContainer.mainView.available = eventData.available;
	const newAppState = getAppState();
	setRegistrationViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView_username() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isRegistrationView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.username;
}

export function set_rootContainer_registrationView_username(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isRegistrationView !== true) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	appState.rootContainer.mainView.username = eventData.username;
	const newAppState = getAppState();
	setRegistrationViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView_email() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isRegistrationView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.email;
}

export function set_rootContainer_registrationView_email(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isRegistrationView !== true) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	appState.rootContainer.mainView.email = eventData.email;
	const newAppState = getAppState();
	setRegistrationViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView_emailInvalid() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isRegistrationView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.emailInvalid;
}

export function set_rootContainer_registrationView_emailInvalid(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isRegistrationView !== true) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	appState.rootContainer.mainView.emailInvalid = eventData.emailInvalid;
	const newAppState = getAppState();
	setRegistrationViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_registrationView_passwordMismatch() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isRegistrationView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.passwordMismatch;
}

export function set_rootContainer_registrationView_passwordMismatch(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isRegistrationView !== true) {
		appState.rootContainer.mainView = {
			isRegistrationView : true
		};
	}
	appState.rootContainer.mainView.passwordMismatch = eventData.passwordMismatch;
	const newAppState = getAppState();
	setRegistrationViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_forgotPasswordView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isForgotPasswordView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_forgotPasswordView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.forgotPasswordView) {
		appState.rootContainer.mainView = eventData.forgotPasswordView;
		appState.rootContainer.mainView.isForgotPasswordView = true;
	} else {
		appState.rootContainer.mainView = {
			isForgotPasswordView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_forgotPasswordView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isForgotPasswordView : true
		};
	}
	if (eventData.username !== undefined) {
		appState.rootContainer.mainView.username = eventData.username;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_forgotPasswordView_username() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isForgotPasswordView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.username;
}

export function set_rootContainer_forgotPasswordView_username(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isForgotPasswordView !== true) {
		appState.rootContainer.mainView = {
			isForgotPasswordView : true
		};
	}
	appState.rootContainer.mainView.username = eventData.username;
	const newAppState = getAppState();
	setForgotPasswordViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_resetPasswordView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isResetPasswordView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_resetPasswordView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.resetPasswordView) {
		appState.rootContainer.mainView = eventData.resetPasswordView;
		appState.rootContainer.mainView.isResetPasswordView = true;
	} else {
		appState.rootContainer.mainView = {
			isResetPasswordView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_resetPasswordView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isResetPasswordView : true
		};
	}
	if (eventData.token !== undefined) {
		appState.rootContainer.mainView.token = eventData.token;
	}
	if (eventData.passwordMismatch !== undefined) {
		appState.rootContainer.mainView.passwordMismatch = eventData.passwordMismatch;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_resetPasswordView_token() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isResetPasswordView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.token;
}

export function set_rootContainer_resetPasswordView_token(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isResetPasswordView !== true) {
		appState.rootContainer.mainView = {
			isResetPasswordView : true
		};
	}
	appState.rootContainer.mainView.token = eventData.token;
	const newAppState = getAppState();
	setResetPasswordViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_resetPasswordView_passwordMismatch() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isResetPasswordView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.passwordMismatch;
}

export function set_rootContainer_resetPasswordView_passwordMismatch(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isResetPasswordView !== true) {
		appState.rootContainer.mainView = {
			isResetPasswordView : true
		};
	}
	appState.rootContainer.mainView.passwordMismatch = eventData.passwordMismatch;
	const newAppState = getAppState();
	setResetPasswordViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_dashboardView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isDashboardView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_dashboardView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.dashboardView) {
		appState.rootContainer.mainView = eventData.dashboardView;
		appState.rootContainer.mainView.isDashboardView = true;
	} else {
		appState.rootContainer.mainView = {
			isDashboardView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_dashboardView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isDashboardView : true
		};
	}
	if (eventData.boxList !== undefined) {
		appState.rootContainer.mainView.boxList = eventData.boxList;
	}
	if (eventData.deleteBox !== undefined) {
		appState.rootContainer.mainView.deleteBox = eventData.deleteBox;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_dashboardView_boxList() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isDashboardView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.boxList) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.boxList);
}

export function set_rootContainer_dashboardView_boxList(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isDashboardView !== true) {
		appState.rootContainer.mainView = {
			isDashboardView : true
		};
	}
	appState.rootContainer.mainView.boxList = eventData.boxList;
	const newAppState = getAppState();
	setDashboardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_dashboardView_deleteBox() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isDashboardView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.deleteBox) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.deleteBox);
}

export function set_rootContainer_dashboardView_deleteBox(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isDashboardView !== true) {
		appState.rootContainer.mainView = {
			isDashboardView : true
		};
	}
	appState.rootContainer.mainView.deleteBox = eventData.deleteBox;
	const newAppState = getAppState();
	setDeleteBoxState(AppUtils.deepCopy(appState.rootContainer.mainView.deleteBox));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_dashboardView_deleteBox(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.deleteBox) {
		appState.rootContainer.mainView.deleteBox = {};
	}
	if (eventData.confirmDelete !== undefined) {
		appState.rootContainer.mainView.deleteBox.confirmDelete = eventData.confirmDelete;
	}
	if (eventData.boxId !== undefined) {
		appState.rootContainer.mainView.deleteBox.boxId = eventData.boxId;
	}
	const newAppState = getAppState();
	setDeleteBoxState(AppUtils.deepCopy(appState.rootContainer.mainView.deleteBox));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_dashboardView_deleteBox_confirmDelete() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isDashboardView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.deleteBox) {
		return undefined;
	}
	return appState.rootContainer.mainView.deleteBox.confirmDelete;
}

export function set_rootContainer_dashboardView_deleteBox_confirmDelete(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isDashboardView !== true) {
		appState.rootContainer.mainView = {
			isDashboardView : true
		};
	}
	if (!appState.rootContainer.mainView.deleteBox) {
		appState.rootContainer.mainView.deleteBox = {};
	}
	appState.rootContainer.mainView.deleteBox.confirmDelete = eventData.confirmDelete;
	const newAppState = getAppState();
	setDeleteBoxState(AppUtils.deepCopy(appState.rootContainer.mainView.deleteBox));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_dashboardView_deleteBox_boxId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isDashboardView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.deleteBox) {
		return undefined;
	}
	return appState.rootContainer.mainView.deleteBox.boxId;
}

export function set_rootContainer_dashboardView_deleteBox_boxId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isDashboardView !== true) {
		appState.rootContainer.mainView = {
			isDashboardView : true
		};
	}
	if (!appState.rootContainer.mainView.deleteBox) {
		appState.rootContainer.mainView.deleteBox = {};
	}
	appState.rootContainer.mainView.deleteBox.boxId = eventData.boxId;
	const newAppState = getAppState();
	setDeleteBoxState(AppUtils.deepCopy(appState.rootContainer.mainView.deleteBox));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isBoxSettingsView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_boxSettingsView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.boxSettingsView) {
		appState.rootContainer.mainView = eventData.boxSettingsView;
		appState.rootContainer.mainView.isBoxSettingsView = true;
	} else {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_boxSettingsView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	if (eventData.maxIntervalInvalid !== undefined) {
		appState.rootContainer.mainView.maxIntervalInvalid = eventData.maxIntervalInvalid;
	}
	if (eventData.maxCardsPerDayInvalid !== undefined) {
		appState.rootContainer.mainView.maxCardsPerDayInvalid = eventData.maxCardsPerDayInvalid;
	}
	if (eventData.tooManyCardsStatus !== undefined) {
		appState.rootContainer.mainView.tooManyCardsStatus = eventData.tooManyCardsStatus;
	}
	if (eventData.dictionaryLookupInvalid !== undefined) {
		appState.rootContainer.mainView.dictionaryLookupInvalid = eventData.dictionaryLookupInvalid;
	}
	if (eventData.boxId !== undefined) {
		appState.rootContainer.mainView.boxId = eventData.boxId;
	}
	if (eventData.maxInterval !== undefined) {
		appState.rootContainer.mainView.maxInterval = eventData.maxInterval;
	}
	if (eventData.maxCardsPerDay !== undefined) {
		appState.rootContainer.mainView.maxCardsPerDay = eventData.maxCardsPerDay;
	}
	if (eventData.categoryName !== undefined) {
		appState.rootContainer.mainView.categoryName = eventData.categoryName;
	}
	if (eventData.dictionaryLookup !== undefined) {
		appState.rootContainer.mainView.dictionaryLookup = eventData.dictionaryLookup;
	}
	if (eventData.givenLanguage !== undefined) {
		appState.rootContainer.mainView.givenLanguage = eventData.givenLanguage;
	}
	if (eventData.wantedLanguage !== undefined) {
		appState.rootContainer.mainView.wantedLanguage = eventData.wantedLanguage;
	}
	if (eventData.categoryId !== undefined) {
		appState.rootContainer.mainView.categoryId = eventData.categoryId;
	}
	if (eventData.allActiveCards !== undefined) {
		appState.rootContainer.mainView.allActiveCards = eventData.allActiveCards;
	}
	if (eventData.allCards !== undefined) {
		appState.rootContainer.mainView.allCards = eventData.allCards;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_maxIntervalInvalid() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.maxIntervalInvalid;
}

export function set_rootContainer_boxSettingsView_maxIntervalInvalid(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.maxIntervalInvalid = eventData.maxIntervalInvalid;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_maxCardsPerDayInvalid() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.maxCardsPerDayInvalid;
}

export function set_rootContainer_boxSettingsView_maxCardsPerDayInvalid(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.maxCardsPerDayInvalid = eventData.maxCardsPerDayInvalid;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_tooManyCardsStatus() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.tooManyCardsStatus;
}

export function set_rootContainer_boxSettingsView_tooManyCardsStatus(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.tooManyCardsStatus = eventData.tooManyCardsStatus;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_dictionaryLookupInvalid() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.dictionaryLookupInvalid;
}

export function set_rootContainer_boxSettingsView_dictionaryLookupInvalid(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.dictionaryLookupInvalid = eventData.dictionaryLookupInvalid;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_boxId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.boxId;
}

export function set_rootContainer_boxSettingsView_boxId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.boxId = eventData.boxId;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_maxInterval() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.maxInterval;
}

export function set_rootContainer_boxSettingsView_maxInterval(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.maxInterval = eventData.maxInterval;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_maxCardsPerDay() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.maxCardsPerDay;
}

export function set_rootContainer_boxSettingsView_maxCardsPerDay(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.maxCardsPerDay = eventData.maxCardsPerDay;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_categoryName() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryName;
}

export function set_rootContainer_boxSettingsView_categoryName(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.categoryName = eventData.categoryName;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_dictionaryLookup() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.dictionaryLookup;
}

export function set_rootContainer_boxSettingsView_dictionaryLookup(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.dictionaryLookup = eventData.dictionaryLookup;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_givenLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.givenLanguage;
}

export function set_rootContainer_boxSettingsView_givenLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.givenLanguage = eventData.givenLanguage;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_wantedLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.wantedLanguage;
}

export function set_rootContainer_boxSettingsView_wantedLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.wantedLanguage = eventData.wantedLanguage;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_categoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryId;
}

export function set_rootContainer_boxSettingsView_categoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.categoryId = eventData.categoryId;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_allActiveCards() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.allActiveCards;
}

export function set_rootContainer_boxSettingsView_allActiveCards(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.allActiveCards = eventData.allActiveCards;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_boxSettingsView_allCards() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isBoxSettingsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.allCards;
}

export function set_rootContainer_boxSettingsView_allCards(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isBoxSettingsView !== true) {
		appState.rootContainer.mainView = {
			isBoxSettingsView : true
		};
	}
	appState.rootContainer.mainView.allCards = eventData.allCards;
	const newAppState = getAppState();
	setBoxSettingsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_allActiveCardsView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isAllActiveCardsView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_allActiveCardsView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.allActiveCardsView) {
		appState.rootContainer.mainView = eventData.allActiveCardsView;
		appState.rootContainer.mainView.isAllActiveCardsView = true;
	} else {
		appState.rootContainer.mainView = {
			isAllActiveCardsView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_allActiveCardsView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isAllActiveCardsView : true
		};
	}
	if (eventData.boxId !== undefined) {
		appState.rootContainer.mainView.boxId = eventData.boxId;
	}
	if (eventData.editable !== undefined) {
		appState.rootContainer.mainView.editable = eventData.editable;
	}
	if (eventData.activeCardList !== undefined) {
		appState.rootContainer.mainView.activeCardList = eventData.activeCardList;
	}
	if (eventData.selectedCardIds !== undefined) {
		appState.rootContainer.mainView.selectedCardIds = eventData.selectedCardIds;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_allActiveCardsView_boxId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.boxId;
}

export function set_rootContainer_allActiveCardsView_boxId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		appState.rootContainer.mainView = {
			isAllActiveCardsView : true
		};
	}
	appState.rootContainer.mainView.boxId = eventData.boxId;
	const newAppState = getAppState();
	setAllActiveCardsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_allActiveCardsView_editable() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.editable;
}

export function set_rootContainer_allActiveCardsView_editable(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		appState.rootContainer.mainView = {
			isAllActiveCardsView : true
		};
	}
	appState.rootContainer.mainView.editable = eventData.editable;
	const newAppState = getAppState();
	setAllActiveCardsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_allActiveCardsView_activeCardList() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.activeCardList) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.activeCardList);
}

export function set_rootContainer_allActiveCardsView_activeCardList(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		appState.rootContainer.mainView = {
			isAllActiveCardsView : true
		};
	}
	appState.rootContainer.mainView.activeCardList = eventData.activeCardList;
	const newAppState = getAppState();
	setAllActiveCardsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_allActiveCardsView_selectedCardIds() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.selectedCardIds;
}

export function set_rootContainer_allActiveCardsView_selectedCardIds(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAllActiveCardsView !== true) {
		appState.rootContainer.mainView = {
			isAllActiveCardsView : true
		};
	}
	appState.rootContainer.mainView.selectedCardIds = eventData.selectedCardIds;
	const newAppState = getAppState();
	setAllActiveCardsViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_profileView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isProfileView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_profileView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.profileView) {
		appState.rootContainer.mainView = eventData.profileView;
		appState.rootContainer.mainView.isProfileView = true;
	} else {
		appState.rootContainer.mainView = {
			isProfileView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_profileView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isProfileView : true
		};
	}
	if (eventData.username !== undefined) {
		appState.rootContainer.mainView.username = eventData.username;
	}
	if (eventData.email !== undefined) {
		appState.rootContainer.mainView.email = eventData.email;
	}
	if (eventData.role !== undefined) {
		appState.rootContainer.mainView.role = eventData.role;
	}
	if (eventData.showDeleteUserDialog !== undefined) {
		appState.rootContainer.mainView.showDeleteUserDialog = eventData.showDeleteUserDialog;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_profileView_username() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isProfileView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.username;
}

export function set_rootContainer_profileView_username(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isProfileView !== true) {
		appState.rootContainer.mainView = {
			isProfileView : true
		};
	}
	appState.rootContainer.mainView.username = eventData.username;
	const newAppState = getAppState();
	setProfileViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_profileView_email() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isProfileView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.email;
}

export function set_rootContainer_profileView_email(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isProfileView !== true) {
		appState.rootContainer.mainView = {
			isProfileView : true
		};
	}
	appState.rootContainer.mainView.email = eventData.email;
	const newAppState = getAppState();
	setProfileViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_profileView_role() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isProfileView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.role;
}

export function set_rootContainer_profileView_role(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isProfileView !== true) {
		appState.rootContainer.mainView = {
			isProfileView : true
		};
	}
	appState.rootContainer.mainView.role = eventData.role;
	const newAppState = getAppState();
	setProfileViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_profileView_showDeleteUserDialog() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isProfileView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.showDeleteUserDialog;
}

export function set_rootContainer_profileView_showDeleteUserDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isProfileView !== true) {
		appState.rootContainer.mainView = {
			isProfileView : true
		};
	}
	appState.rootContainer.mainView.showDeleteUserDialog = eventData.showDeleteUserDialog;
	const newAppState = getAppState();
	setProfileViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_userListView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isUserListView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_userListView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.userListView) {
		appState.rootContainer.mainView = eventData.userListView;
		appState.rootContainer.mainView.isUserListView = true;
	} else {
		appState.rootContainer.mainView = {
			isUserListView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_userListView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isUserListView : true
		};
	}
	if (eventData.userList !== undefined) {
		appState.rootContainer.mainView.userList = eventData.userList;
	}
	if (eventData.showDeleteUserDialog !== undefined) {
		appState.rootContainer.mainView.showDeleteUserDialog = eventData.showDeleteUserDialog;
	}
	if (eventData.usernameToBeDeleted !== undefined) {
		appState.rootContainer.mainView.usernameToBeDeleted = eventData.usernameToBeDeleted;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_userListView_userList() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isUserListView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.userList) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.userList);
}

export function set_rootContainer_userListView_userList(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isUserListView !== true) {
		appState.rootContainer.mainView = {
			isUserListView : true
		};
	}
	appState.rootContainer.mainView.userList = eventData.userList;
	const newAppState = getAppState();
	setUserListViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_userListView_showDeleteUserDialog() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isUserListView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.showDeleteUserDialog;
}

export function set_rootContainer_userListView_showDeleteUserDialog(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isUserListView !== true) {
		appState.rootContainer.mainView = {
			isUserListView : true
		};
	}
	appState.rootContainer.mainView.showDeleteUserDialog = eventData.showDeleteUserDialog;
	const newAppState = getAppState();
	setUserListViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_userListView_usernameToBeDeleted() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isUserListView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.usernameToBeDeleted;
}

export function set_rootContainer_userListView_usernameToBeDeleted(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isUserListView !== true) {
		appState.rootContainer.mainView = {
			isUserListView : true
		};
	}
	appState.rootContainer.mainView.usernameToBeDeleted = eventData.usernameToBeDeleted;
	const newAppState = getAppState();
	setUserListViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isQueryCardView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_queryCardView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.queryCardView) {
		appState.rootContainer.mainView = eventData.queryCardView;
		appState.rootContainer.mainView.isQueryCardView = true;
	} else {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_queryCardView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	if (eventData.cardId !== undefined) {
		appState.rootContainer.mainView.cardId = eventData.cardId;
	}
	if (eventData.categoryId !== undefined) {
		appState.rootContainer.mainView.categoryId = eventData.categoryId;
	}
	if (eventData.categoryName !== undefined) {
		appState.rootContainer.mainView.categoryName = eventData.categoryName;
	}
	if (eventData.count !== undefined) {
		appState.rootContainer.mainView.count = eventData.count;
	}
	if (eventData.given !== undefined) {
		appState.rootContainer.mainView.given = eventData.given;
	}
	if (eventData.image !== undefined) {
		appState.rootContainer.mainView.image = eventData.image;
	}
	if (eventData.lastQuality !== undefined) {
		appState.rootContainer.mainView.lastQuality = eventData.lastQuality;
	}
	if (eventData.rootCategoryId !== undefined) {
		appState.rootContainer.mainView.rootCategoryId = eventData.rootCategoryId;
	}
	if (eventData.scheduledCardId !== undefined) {
		appState.rootContainer.mainView.scheduledCardId = eventData.scheduledCardId;
	}
	if (eventData.reinforceCardId !== undefined) {
		appState.rootContainer.mainView.reinforceCardId = eventData.reinforceCardId;
	}
	if (eventData.scheduledDate !== undefined) {
		appState.rootContainer.mainView.scheduledDate = eventData.scheduledDate;
	}
	if (eventData.scoredDate !== undefined) {
		appState.rootContainer.mainView.scoredDate = eventData.scoredDate;
	}
	if (eventData.wanted !== undefined) {
		appState.rootContainer.mainView.wanted = eventData.wanted;
	}
	if (eventData.openTodaysCards !== undefined) {
		appState.rootContainer.mainView.openTodaysCards = eventData.openTodaysCards;
	}
	if (eventData.allTodaysCards !== undefined) {
		appState.rootContainer.mainView.allTodaysCards = eventData.allTodaysCards;
	}
	if (eventData.index !== undefined) {
		appState.rootContainer.mainView.index = eventData.index;
	}
	if (eventData.enableScoreButtons !== undefined) {
		appState.rootContainer.mainView.enableScoreButtons = eventData.enableScoreButtons;
	}
	if (eventData.displayImage !== undefined) {
		appState.rootContainer.mainView.displayImage = eventData.displayImage;
	}
	if (eventData.boxId !== undefined) {
		appState.rootContainer.mainView.boxId = eventData.boxId;
	}
	if (eventData.reverse !== undefined) {
		appState.rootContainer.mainView.reverse = eventData.reverse;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_cardId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardId;
}

export function set_rootContainer_queryCardView_cardId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.cardId = eventData.cardId;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_categoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryId;
}

export function set_rootContainer_queryCardView_categoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.categoryId = eventData.categoryId;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_categoryName() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryName;
}

export function set_rootContainer_queryCardView_categoryName(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.categoryName = eventData.categoryName;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_count() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.count;
}

export function set_rootContainer_queryCardView_count(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.count = eventData.count;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_given() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.given;
}

export function set_rootContainer_queryCardView_given(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.given = eventData.given;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_image() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.image;
}

export function set_rootContainer_queryCardView_image(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.image = eventData.image;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_lastQuality() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.lastQuality;
}

export function set_rootContainer_queryCardView_lastQuality(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.lastQuality = eventData.lastQuality;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_rootCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.rootCategoryId;
}

export function set_rootContainer_queryCardView_rootCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.rootCategoryId = eventData.rootCategoryId;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_scheduledCardId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.scheduledCardId;
}

export function set_rootContainer_queryCardView_scheduledCardId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.scheduledCardId = eventData.scheduledCardId;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_reinforceCardId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.reinforceCardId;
}

export function set_rootContainer_queryCardView_reinforceCardId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.reinforceCardId = eventData.reinforceCardId;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_scheduledDate() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.scheduledDate;
}

export function set_rootContainer_queryCardView_scheduledDate(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.scheduledDate = eventData.scheduledDate;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_scoredDate() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.scoredDate;
}

export function set_rootContainer_queryCardView_scoredDate(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.scoredDate = eventData.scoredDate;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_wanted() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.wanted;
}

export function set_rootContainer_queryCardView_wanted(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.wanted = eventData.wanted;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_openTodaysCards() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.openTodaysCards;
}

export function set_rootContainer_queryCardView_openTodaysCards(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.openTodaysCards = eventData.openTodaysCards;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_allTodaysCards() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.allTodaysCards;
}

export function set_rootContainer_queryCardView_allTodaysCards(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.allTodaysCards = eventData.allTodaysCards;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_index() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.index;
}

export function set_rootContainer_queryCardView_index(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.index = eventData.index;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_enableScoreButtons() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.enableScoreButtons;
}

export function set_rootContainer_queryCardView_enableScoreButtons(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.enableScoreButtons = eventData.enableScoreButtons;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_displayImage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.displayImage;
}

export function set_rootContainer_queryCardView_displayImage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.displayImage = eventData.displayImage;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_boxId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.boxId;
}

export function set_rootContainer_queryCardView_boxId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.boxId = eventData.boxId;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_queryCardView_reverse() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isQueryCardView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.reverse;
}

export function set_rootContainer_queryCardView_reverse(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isQueryCardView !== true) {
		appState.rootContainer.mainView = {
			isQueryCardView : true
		};
	}
	appState.rootContainer.mainView.reverse = eventData.reverse;
	const newAppState = getAppState();
	setQueryCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (appState.rootContainer.mainView && appState.rootContainer.mainView.isAuthorView === true) {
		return AppUtils.deepCopy(appState.rootContainer.mainView);
	}
	return undefined;
}

export function set_rootContainer_authorView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!!eventData.authorView) {
		appState.rootContainer.mainView = eventData.authorView;
		appState.rootContainer.mainView.isAuthorView = true;
	} else {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (eventData.filterNonScheduled !== undefined) {
		appState.rootContainer.mainView.filterNonScheduled = eventData.filterNonScheduled;
	}
	if (eventData.reverse !== undefined) {
		appState.rootContainer.mainView.reverse = eventData.reverse;
	}
	if (eventData.reverseBoxExists !== undefined) {
		appState.rootContainer.mainView.reverseBoxExists = eventData.reverseBoxExists;
	}
	if (eventData.boxId !== undefined) {
		appState.rootContainer.mainView.boxId = eventData.boxId;
	}
	if (eventData.priority !== undefined) {
		appState.rootContainer.mainView.priority = eventData.priority;
	}
	if (eventData.categoryTree !== undefined) {
		appState.rootContainer.mainView.categoryTree = eventData.categoryTree;
	}
	if (eventData.cardView !== undefined) {
		appState.rootContainer.mainView.cardView = eventData.cardView;
	}
	const newAppState = getAppState();
	setMainViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_filterNonScheduled() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.filterNonScheduled;
}

export function set_rootContainer_authorView_filterNonScheduled(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.filterNonScheduled = eventData.filterNonScheduled;
	const newAppState = getAppState();
	setAuthorViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_reverse() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.reverse;
}

export function set_rootContainer_authorView_reverse(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.reverse = eventData.reverse;
	const newAppState = getAppState();
	setAuthorViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_reverseBoxExists() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.reverseBoxExists;
}

export function set_rootContainer_authorView_reverseBoxExists(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.reverseBoxExists = eventData.reverseBoxExists;
	const newAppState = getAppState();
	setAuthorViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_boxId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.boxId;
}

export function set_rootContainer_authorView_boxId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.boxId = eventData.boxId;
	const newAppState = getAppState();
	setAuthorViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_priority() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	return appState.rootContainer.mainView.priority;
}

export function set_rootContainer_authorView_priority(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.priority = eventData.priority;
	const newAppState = getAppState();
	setAuthorViewState(AppUtils.deepCopy(appState.rootContainer.mainView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree);
}

export function set_rootContainer_authorView_categoryTree(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.categoryTree = eventData.categoryTree;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_categoryTree(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (eventData.selectedCategory !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = eventData.selectedCategory;
	}
	if (eventData.rootCategory !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory = eventData.rootCategory;
	}
	if (eventData.displayDeleteCategory !== undefined) {
		appState.rootContainer.mainView.categoryTree.displayDeleteCategory = eventData.displayDeleteCategory;
	}
	if (eventData.categoryName !== undefined) {
		appState.rootContainer.mainView.categoryTree.categoryName = eventData.categoryName;
	}
	if (eventData.displayEditCategory !== undefined) {
		appState.rootContainer.mainView.categoryTree.displayEditCategory = eventData.displayEditCategory;
	}
	if (eventData.displayNewCategory !== undefined) {
		appState.rootContainer.mainView.categoryTree.displayNewCategory = eventData.displayNewCategory;
	}
	if (eventData.displayInviteUser !== undefined) {
		appState.rootContainer.mainView.categoryTree.displayInviteUser = eventData.displayInviteUser;
	}
	if (eventData.usernameSearchString !== undefined) {
		appState.rootContainer.mainView.categoryTree.usernameSearchString = eventData.usernameSearchString;
	}
	if (eventData.usernames !== undefined) {
		appState.rootContainer.mainView.categoryTree.usernames = eventData.usernames;
	}
	if (eventData.invitedUsernames !== undefined) {
		appState.rootContainer.mainView.categoryTree.invitedUsernames = eventData.invitedUsernames;
	}
	if (eventData.dropAllowed !== undefined) {
		appState.rootContainer.mainView.categoryTree.dropAllowed = eventData.dropAllowed;
	}
	if (eventData.dropTargetCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.dropTargetCategoryId = eventData.dropTargetCategoryId;
	}
	if (eventData.movedCategory !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory = eventData.movedCategory;
	}
	if (eventData.previewCsv !== undefined) {
		appState.rootContainer.mainView.categoryTree.previewCsv = eventData.previewCsv;
	}
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory);
}

export function set_rootContainer_authorView_categoryTree_selectedCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory = eventData.selectedCategory;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_categoryTree_selectedCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	if (eventData.categoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.categoryId = eventData.categoryId;
	}
	if (eventData.categoryName !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.categoryName = eventData.categoryName;
	}
	if (eventData.categoryIndex !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.categoryIndex = eventData.categoryIndex;
	}
	if (eventData.empty !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.empty = eventData.empty;
	}
	if (eventData.parentCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.parentCategoryId = eventData.parentCategoryId;
	}
	if (eventData.dictionaryLookup !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.dictionaryLookup = eventData.dictionaryLookup;
	}
	if (eventData.givenLanguage !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.givenLanguage = eventData.givenLanguage;
	}
	if (eventData.wantedLanguage !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.wantedLanguage = eventData.wantedLanguage;
	}
	if (eventData.rootCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.rootCategoryId = eventData.rootCategoryId;
	}
	if (eventData.childCategories !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.childCategories = eventData.childCategories;
	}
	if (eventData.nonScheduledCount !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.nonScheduledCount = eventData.nonScheduledCount;
	}
	if (eventData.editable !== undefined) {
		appState.rootContainer.mainView.categoryTree.selectedCategory.editable = eventData.editable;
	}
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_categoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.categoryId;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_categoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.categoryId = eventData.categoryId;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_categoryName() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.categoryName;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_categoryName(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.categoryName = eventData.categoryName;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_categoryIndex() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.categoryIndex;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_categoryIndex(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.categoryIndex = eventData.categoryIndex;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_empty() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.empty;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_empty(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.empty = eventData.empty;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_parentCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.parentCategoryId;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_parentCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.parentCategoryId = eventData.parentCategoryId;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_dictionaryLookup() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.dictionaryLookup;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_dictionaryLookup(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.dictionaryLookup = eventData.dictionaryLookup;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_givenLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.givenLanguage;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_givenLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.givenLanguage = eventData.givenLanguage;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_wantedLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.wantedLanguage;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_wantedLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.wantedLanguage = eventData.wantedLanguage;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_rootCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.rootCategoryId;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_rootCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.rootCategoryId = eventData.rootCategoryId;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_childCategories() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.childCategories;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_childCategories(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.childCategories = eventData.childCategories;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_nonScheduledCount() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.nonScheduledCount;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_nonScheduledCount(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.nonScheduledCount = eventData.nonScheduledCount;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_selectedCategory_editable() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.selectedCategory.editable;
}

export function set_rootContainer_authorView_categoryTree_selectedCategory_editable(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.selectedCategory) {
		appState.rootContainer.mainView.categoryTree.selectedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.selectedCategory.editable = eventData.editable;
	const newAppState = getAppState();
	setSelectedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.selectedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory);
}

export function set_rootContainer_authorView_categoryTree_rootCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory = eventData.rootCategory;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_categoryTree_rootCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	if (eventData.categoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.categoryId = eventData.categoryId;
	}
	if (eventData.categoryName !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.categoryName = eventData.categoryName;
	}
	if (eventData.categoryIndex !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.categoryIndex = eventData.categoryIndex;
	}
	if (eventData.empty !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.empty = eventData.empty;
	}
	if (eventData.parentCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.parentCategoryId = eventData.parentCategoryId;
	}
	if (eventData.dictionaryLookup !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.dictionaryLookup = eventData.dictionaryLookup;
	}
	if (eventData.givenLanguage !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.givenLanguage = eventData.givenLanguage;
	}
	if (eventData.wantedLanguage !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.wantedLanguage = eventData.wantedLanguage;
	}
	if (eventData.rootCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.rootCategoryId = eventData.rootCategoryId;
	}
	if (eventData.childCategories !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.childCategories = eventData.childCategories;
	}
	if (eventData.nonScheduledCount !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.nonScheduledCount = eventData.nonScheduledCount;
	}
	if (eventData.editable !== undefined) {
		appState.rootContainer.mainView.categoryTree.rootCategory.editable = eventData.editable;
	}
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_categoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.categoryId;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_categoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.categoryId = eventData.categoryId;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_categoryName() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.categoryName;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_categoryName(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.categoryName = eventData.categoryName;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_categoryIndex() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.categoryIndex;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_categoryIndex(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.categoryIndex = eventData.categoryIndex;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_empty() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.empty;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_empty(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.empty = eventData.empty;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_parentCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.parentCategoryId;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_parentCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.parentCategoryId = eventData.parentCategoryId;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_dictionaryLookup() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.dictionaryLookup;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_dictionaryLookup(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.dictionaryLookup = eventData.dictionaryLookup;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_givenLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.givenLanguage;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_givenLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.givenLanguage = eventData.givenLanguage;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_wantedLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.wantedLanguage;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_wantedLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.wantedLanguage = eventData.wantedLanguage;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_rootCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.rootCategoryId;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_rootCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.rootCategoryId = eventData.rootCategoryId;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_childCategories() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.childCategories;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_childCategories(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.childCategories = eventData.childCategories;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_nonScheduledCount() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.nonScheduledCount;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_nonScheduledCount(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.nonScheduledCount = eventData.nonScheduledCount;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_rootCategory_editable() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.rootCategory.editable;
}

export function set_rootContainer_authorView_categoryTree_rootCategory_editable(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.rootCategory) {
		appState.rootContainer.mainView.categoryTree.rootCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.rootCategory.editable = eventData.editable;
	const newAppState = getAppState();
	setRootCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.rootCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_displayDeleteCategory() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.displayDeleteCategory;
}

export function set_rootContainer_authorView_categoryTree_displayDeleteCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.displayDeleteCategory = eventData.displayDeleteCategory;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_categoryName() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.categoryName;
}

export function set_rootContainer_authorView_categoryTree_categoryName(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.categoryName = eventData.categoryName;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_displayEditCategory() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.displayEditCategory;
}

export function set_rootContainer_authorView_categoryTree_displayEditCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.displayEditCategory = eventData.displayEditCategory;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_displayNewCategory() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.displayNewCategory;
}

export function set_rootContainer_authorView_categoryTree_displayNewCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.displayNewCategory = eventData.displayNewCategory;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_displayInviteUser() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.displayInviteUser;
}

export function set_rootContainer_authorView_categoryTree_displayInviteUser(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.displayInviteUser = eventData.displayInviteUser;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_usernameSearchString() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.usernameSearchString;
}

export function set_rootContainer_authorView_categoryTree_usernameSearchString(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.usernameSearchString = eventData.usernameSearchString;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_usernames() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.usernames;
}

export function set_rootContainer_authorView_categoryTree_usernames(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.usernames = eventData.usernames;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_invitedUsernames() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.invitedUsernames;
}

export function set_rootContainer_authorView_categoryTree_invitedUsernames(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.invitedUsernames = eventData.invitedUsernames;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_dropAllowed() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.dropAllowed;
}

export function set_rootContainer_authorView_categoryTree_dropAllowed(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.dropAllowed = eventData.dropAllowed;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_dropTargetCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.dropTargetCategoryId;
}

export function set_rootContainer_authorView_categoryTree_dropTargetCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.dropTargetCategoryId = eventData.dropTargetCategoryId;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory);
}

export function set_rootContainer_authorView_categoryTree_movedCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory = eventData.movedCategory;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_categoryTree_movedCategory(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	if (eventData.categoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.categoryId = eventData.categoryId;
	}
	if (eventData.categoryName !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.categoryName = eventData.categoryName;
	}
	if (eventData.categoryIndex !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.categoryIndex = eventData.categoryIndex;
	}
	if (eventData.empty !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.empty = eventData.empty;
	}
	if (eventData.parentCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.parentCategoryId = eventData.parentCategoryId;
	}
	if (eventData.dictionaryLookup !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.dictionaryLookup = eventData.dictionaryLookup;
	}
	if (eventData.givenLanguage !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.givenLanguage = eventData.givenLanguage;
	}
	if (eventData.wantedLanguage !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.wantedLanguage = eventData.wantedLanguage;
	}
	if (eventData.rootCategoryId !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.rootCategoryId = eventData.rootCategoryId;
	}
	if (eventData.childCategories !== undefined) {
		appState.rootContainer.mainView.categoryTree.movedCategory.childCategories = eventData.childCategories;
	}
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_categoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.categoryId;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_categoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.categoryId = eventData.categoryId;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_categoryName() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.categoryName;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_categoryName(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.categoryName = eventData.categoryName;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_categoryIndex() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.categoryIndex;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_categoryIndex(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.categoryIndex = eventData.categoryIndex;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_empty() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.empty;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_empty(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.empty = eventData.empty;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_parentCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.parentCategoryId;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_parentCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.parentCategoryId = eventData.parentCategoryId;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_dictionaryLookup() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.dictionaryLookup;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_dictionaryLookup(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.dictionaryLookup = eventData.dictionaryLookup;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_givenLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.givenLanguage;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_givenLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.givenLanguage = eventData.givenLanguage;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_wantedLanguage() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.wantedLanguage;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_wantedLanguage(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.wantedLanguage = eventData.wantedLanguage;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_rootCategoryId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.rootCategoryId;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_rootCategoryId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.rootCategoryId = eventData.rootCategoryId;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_movedCategory_childCategories() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.movedCategory.childCategories;
}

export function set_rootContainer_authorView_categoryTree_movedCategory_childCategories(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	if (!appState.rootContainer.mainView.categoryTree.movedCategory) {
		appState.rootContainer.mainView.categoryTree.movedCategory = {};
	}
	appState.rootContainer.mainView.categoryTree.movedCategory.childCategories = eventData.childCategories;
	const newAppState = getAppState();
	setMovedCategoryState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree.movedCategory));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_categoryTree_previewCsv() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		return undefined;
	}
	return appState.rootContainer.mainView.categoryTree.previewCsv;
}

export function set_rootContainer_authorView_categoryTree_previewCsv(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.categoryTree) {
		appState.rootContainer.mainView.categoryTree = {};
	}
	appState.rootContainer.mainView.categoryTree.previewCsv = eventData.previewCsv;
	const newAppState = getAppState();
	setCategoryTreeState(AppUtils.deepCopy(appState.rootContainer.mainView.categoryTree));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.cardView);
}

export function set_rootContainer_authorView_cardView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	appState.rootContainer.mainView.cardView = eventData.cardView;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_cardView(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (eventData.cardList !== undefined) {
		appState.rootContainer.mainView.cardView.cardList = eventData.cardList;
	}
	if (eventData.naturalInputOrder !== undefined) {
		appState.rootContainer.mainView.cardView.naturalInputOrder = eventData.naturalInputOrder;
	}
	if (eventData.filter !== undefined) {
		appState.rootContainer.mainView.cardView.filter = eventData.filter;
	}
	if (eventData.editedCard !== undefined) {
		appState.rootContainer.mainView.cardView.editedCard = eventData.editedCard;
	}
	if (eventData.newCard !== undefined) {
		appState.rootContainer.mainView.cardView.newCard = eventData.newCard;
	}
	if (eventData.cardDuplicates !== undefined) {
		appState.rootContainer.mainView.cardView.cardDuplicates = eventData.cardDuplicates;
	}
	if (eventData.deleteCard !== undefined) {
		appState.rootContainer.mainView.cardView.deleteCard = eventData.deleteCard;
	}
	if (eventData.dictionaryValue !== undefined) {
		appState.rootContainer.mainView.cardView.dictionaryValue = eventData.dictionaryValue;
	}
	if (eventData.selectedCardIds !== undefined) {
		appState.rootContainer.mainView.cardView.selectedCardIds = eventData.selectedCardIds;
	}
	if (eventData.movedCardIds !== undefined) {
		appState.rootContainer.mainView.cardView.movedCardIds = eventData.movedCardIds;
	}
	if (eventData.dragTargetCardId !== undefined) {
		appState.rootContainer.mainView.cardView.dragTargetCardId = eventData.dragTargetCardId;
	}
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_cardList() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.cardList) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.cardView.cardList);
}

export function set_rootContainer_authorView_cardView_cardList(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.cardList = eventData.cardList;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_naturalInputOrder() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.naturalInputOrder;
}

export function set_rootContainer_authorView_cardView_naturalInputOrder(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.naturalInputOrder = eventData.naturalInputOrder;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_filter() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.filter;
}

export function set_rootContainer_authorView_cardView_filter(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.filter = eventData.filter;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_editedCard() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard);
}

export function set_rootContainer_authorView_cardView_editedCard(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.editedCard = eventData.editedCard;
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_cardView_editedCard(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		appState.rootContainer.mainView.cardView.editedCard = {};
	}
	if (eventData.cardId !== undefined) {
		appState.rootContainer.mainView.cardView.editedCard.cardId = eventData.cardId;
	}
	if (eventData.given !== undefined) {
		appState.rootContainer.mainView.cardView.editedCard.given = eventData.given;
	}
	if (eventData.wanted !== undefined) {
		appState.rootContainer.mainView.cardView.editedCard.wanted = eventData.wanted;
	}
	if (eventData.index !== undefined) {
		appState.rootContainer.mainView.cardView.editedCard.index = eventData.index;
	}
	if (eventData.image !== undefined) {
		appState.rootContainer.mainView.cardView.editedCard.image = eventData.image;
	}
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_editedCard_cardId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.editedCard.cardId;
}

export function set_rootContainer_authorView_cardView_editedCard_cardId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		appState.rootContainer.mainView.cardView.editedCard = {};
	}
	appState.rootContainer.mainView.cardView.editedCard.cardId = eventData.cardId;
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_editedCard_given() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.editedCard.given;
}

export function set_rootContainer_authorView_cardView_editedCard_given(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		appState.rootContainer.mainView.cardView.editedCard = {};
	}
	appState.rootContainer.mainView.cardView.editedCard.given = eventData.given;
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_editedCard_wanted() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.editedCard.wanted;
}

export function set_rootContainer_authorView_cardView_editedCard_wanted(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		appState.rootContainer.mainView.cardView.editedCard = {};
	}
	appState.rootContainer.mainView.cardView.editedCard.wanted = eventData.wanted;
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_editedCard_index() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.editedCard.index;
}

export function set_rootContainer_authorView_cardView_editedCard_index(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		appState.rootContainer.mainView.cardView.editedCard = {};
	}
	appState.rootContainer.mainView.cardView.editedCard.index = eventData.index;
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_editedCard_image() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.editedCard.image;
}

export function set_rootContainer_authorView_cardView_editedCard_image(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.editedCard) {
		appState.rootContainer.mainView.cardView.editedCard = {};
	}
	appState.rootContainer.mainView.cardView.editedCard.image = eventData.image;
	const newAppState = getAppState();
	setEditedCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.editedCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard);
}

export function set_rootContainer_authorView_cardView_newCard(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.newCard = eventData.newCard;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_cardView_newCard(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	if (eventData.given !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.given = eventData.given;
	}
	if (eventData.wanted !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.wanted = eventData.wanted;
	}
	if (eventData.index !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.index = eventData.index;
	}
	if (eventData.image !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.image = eventData.image;
	}
	if (eventData.file !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.file = eventData.file;
	}
	if (eventData.displaySpinner !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.displaySpinner = eventData.displaySpinner;
	}
	if (eventData.displayTranslateSpinner !== undefined) {
		appState.rootContainer.mainView.cardView.newCard.displayTranslateSpinner = eventData.displayTranslateSpinner;
	}
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_given() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.given;
}

export function set_rootContainer_authorView_cardView_newCard_given(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.given = eventData.given;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_wanted() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.wanted;
}

export function set_rootContainer_authorView_cardView_newCard_wanted(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.wanted = eventData.wanted;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_index() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.index;
}

export function set_rootContainer_authorView_cardView_newCard_index(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.index = eventData.index;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_image() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.image;
}

export function set_rootContainer_authorView_cardView_newCard_image(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.image = eventData.image;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_file() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.file;
}

export function set_rootContainer_authorView_cardView_newCard_file(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.file = eventData.file;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_displaySpinner() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.displaySpinner;
}

export function set_rootContainer_authorView_cardView_newCard_displaySpinner(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.displaySpinner = eventData.displaySpinner;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_newCard_displayTranslateSpinner() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.newCard.displayTranslateSpinner;
}

export function set_rootContainer_authorView_cardView_newCard_displayTranslateSpinner(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.newCard) {
		appState.rootContainer.mainView.cardView.newCard = {};
	}
	appState.rootContainer.mainView.cardView.newCard.displayTranslateSpinner = eventData.displayTranslateSpinner;
	const newAppState = getAppState();
	setNewCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.newCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_cardDuplicates() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.cardDuplicates;
}

export function set_rootContainer_authorView_cardView_cardDuplicates(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.cardDuplicates = eventData.cardDuplicates;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_deleteCard() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.deleteCard) {
		return undefined;
	}
	return AppUtils.deepCopy(appState.rootContainer.mainView.cardView.deleteCard);
}

export function set_rootContainer_authorView_cardView_deleteCard(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.deleteCard = eventData.deleteCard;
	const newAppState = getAppState();
	setDeleteCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.deleteCard));
	AppUtils.stateUpdated(newAppState);
}

export function merge_rootContainer_authorView_cardView_deleteCard(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView) {
		appState.rootContainer.mainView = {};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.deleteCard) {
		appState.rootContainer.mainView.cardView.deleteCard = {};
	}
	if (eventData.confirmDelete !== undefined) {
		appState.rootContainer.mainView.cardView.deleteCard.confirmDelete = eventData.confirmDelete;
	}
	if (eventData.cardId !== undefined) {
		appState.rootContainer.mainView.cardView.deleteCard.cardId = eventData.cardId;
	}
	const newAppState = getAppState();
	setDeleteCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.deleteCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_deleteCard_confirmDelete() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.deleteCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.deleteCard.confirmDelete;
}

export function set_rootContainer_authorView_cardView_deleteCard_confirmDelete(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.deleteCard) {
		appState.rootContainer.mainView.cardView.deleteCard = {};
	}
	appState.rootContainer.mainView.cardView.deleteCard.confirmDelete = eventData.confirmDelete;
	const newAppState = getAppState();
	setDeleteCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.deleteCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_deleteCard_cardId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView.deleteCard) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.deleteCard.cardId;
}

export function set_rootContainer_authorView_cardView_deleteCard_cardId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	if (!appState.rootContainer.mainView.cardView.deleteCard) {
		appState.rootContainer.mainView.cardView.deleteCard = {};
	}
	appState.rootContainer.mainView.cardView.deleteCard.cardId = eventData.cardId;
	const newAppState = getAppState();
	setDeleteCardState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView.deleteCard));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_dictionaryValue() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.dictionaryValue;
}

export function set_rootContainer_authorView_cardView_dictionaryValue(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.dictionaryValue = eventData.dictionaryValue;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_selectedCardIds() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.selectedCardIds;
}

export function set_rootContainer_authorView_cardView_selectedCardIds(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.selectedCardIds = eventData.selectedCardIds;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_movedCardIds() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.movedCardIds;
}

export function set_rootContainer_authorView_cardView_movedCardIds(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.movedCardIds = eventData.movedCardIds;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

export function get_rootContainer_authorView_cardView_dragTargetCardId() {
	if (!appState.rootContainer) {
		return undefined;
	}
	if (!appState.rootContainer.mainView) {
		return undefined;
	}
	if (appState.rootContainer.mainView.isAuthorView !== true) {
		return undefined;
	}
	if (!appState.rootContainer.mainView.cardView) {
		return undefined;
	}
	return appState.rootContainer.mainView.cardView.dragTargetCardId;
}

export function set_rootContainer_authorView_cardView_dragTargetCardId(eventData) {
	if (!appState.rootContainer) {
		appState.rootContainer = {};
	}
	if (!appState.rootContainer.mainView || appState.rootContainer.mainView.isAuthorView !== true) {
		appState.rootContainer.mainView = {
			isAuthorView : true
		};
	}
	if (!appState.rootContainer.mainView.cardView) {
		appState.rootContainer.mainView.cardView = {};
	}
	appState.rootContainer.mainView.cardView.dragTargetCardId = eventData.dragTargetCardId;
	const newAppState = getAppState();
	setCardViewState(AppUtils.deepCopy(appState.rootContainer.mainView.cardView));
	AppUtils.stateUpdated(newAppState);
}

