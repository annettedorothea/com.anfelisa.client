/********************************************************************************
 * generated by de.acegen 1.6.0
 ********************************************************************************/




import * as ACEController from "../ace/ACEController";
import * as AppState from "../../src/AppState";

export default class EventListenerRegistrationCard {

	static init() {
		ACEController.registerListener('card.LoadCardsOkEvent', (data) => {
				AppState.merge(
					data, 
					["rootContainer", "mainView", "authorView", "cardView"], 
					["cardList", "naturalInputOrder", "filter", "editedCard", "newCard", "cardDuplicates", "deleteCard", "dictionaryValue", "selectedCardIds", "movedCardIds", "dragTargetCardId"]
				)
			});
		ACEController.registerListener('card.CreateCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "newCard"], 
					["given", "wanted", "index", "displaySpinner"]
				)
			});
		ACEController.registerListener('card.UpdateCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "editedCard"], 
					["cardId", "given", "wanted", "index"]
				)
			});
		ACEController.registerListener('card.DeleteCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "deleteCard"], 
					["confirmDelete", "cardId"]
				)
			});
		ACEController.registerListener('card.GivenOfNewCardChangedOkEvent', (data) => {
				AppState.merge(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "newCard", "given"]
				)
			});
		ACEController.registerListener('card.WantedOfNewCardChangedOkEvent', (data) => {
				AppState.merge(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "newCard", "wanted"]
				)
			});
		ACEController.registerListener('card.CancelNewCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "newCard"], 
					["given", "wanted", "index", "displaySpinner"]
				)
			});
		ACEController.registerListener('card.GivenOfEditedCardChangedOkEvent', (data) => {
				AppState.merge(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "editedCard", "given"]
				)
			});
		ACEController.registerListener('card.WantedOfEditedCardChangedOkEvent', (data) => {
				AppState.merge(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "editedCard", "wanted"]
				)
			});
		ACEController.registerListener('card.CancelEditCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "editedCard"], 
					["cardId", "given", "wanted", "index"]
				)
			});
		ACEController.registerListener('card.EditCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "editedCard"], 
					["cardId", "given", "wanted", "index"]
				)
			});
		ACEController.registerListener('card.DeleteCardClickOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "deleteCard"], 
					["confirmDelete", "cardId"]
				)
			});
		ACEController.registerListener('card.CancelDeleteCardOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "deleteCard"], 
					["confirmDelete", "cardId"]
				)
			});
		ACEController.registerListener('card.FilterCardsOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "filter"]
				)
			});
		ACEController.registerListener('card.PassValueToDictionaryOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "dictionaryValue"]
				)
			});
		ACEController.registerListener('card.ToggleInputOrderOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "naturalInputOrder"]
				)
			});
		ACEController.registerListener('card.ToggleScheduleCardSelectionOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "selectedCardIds"]
				)
			});
		ACEController.registerListener('card.ToggleAllScheduleCardSelectionOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "selectedCardIds"]
				)
			});
		ACEController.registerListener('card.MoveCardsStartedOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "movedCardIds"]
				)
			});
		ACEController.registerListener('card.MoveCardsOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "movedCardIds"]
				)
			});
		ACEController.registerListener('card.MoveCardsOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "categoryTree", "dropTargetCategoryId"]
				)
			});
		ACEController.registerListener('card.MoveCardsOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "categoryTree", "dropAllowed"]
				)
			});
		ACEController.registerListener('card.ChangeCardOrderOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "movedCardIds"]
				)
			});
		ACEController.registerListener('card.ChangeCardOrderOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "dragTargetCardId"]
				)
			});
		ACEController.registerListener('card.OnDragEnterOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "dragTargetCardId"]
				)
			});
		ACEController.registerListener('card.OnDragExitOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "dragTargetCardId"]
				)
			});
		ACEController.registerListener('card.SearchDuplicateCardsOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView", "cardView", "cardDuplicates"]
				)
			});
	}

}




/******* S.D.G. *******/



