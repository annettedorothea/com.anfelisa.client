/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




import AsynchronousCommand from "../../ace/AsynchronousCommand";
import TriggerAction from "../../ace/TriggerAction";
import * as Utils from "../../ace/Utils";
import * as AppUtils from "../../../src/app/AppUtils";
import * as AppState from "../../ace/AppState";
import DisplayToastAction from "../../../src/common/actions/DisplayToastAction";
import LoginAction from "../../../src/registration/actions/LoginAction";

export default class AbstractRegisterUserCommand extends AsynchronousCommand {
    constructor() {
        super("registration.RegisterUserCommand");
    }
    
    initCommandData(data) {
        data.email = AppState.get_rootContainer_registrationView_email();
        data.language = AppState.get_rootContainer_language();
        data.username = AppState.get_rootContainer_registrationView_username();
        data.password = AppState.get_rootContainer_registrationView_password();
        data.outcomes = [];
    }

	addOkOutcome(data) {
		data.outcomes.push("ok");
	}
	addErrorOutcome(data) {
		data.outcomes.push("error");
	}

	execute(data) {
	    return new Promise((resolve, reject) => {
	    	let payload = {
	    		password : data.password,
	    		username : data.username,
	    		email : data.email,
	    		language : data.language
	    	};
			AppUtils.httpPost(`${Utils.settings.rootPath}/users/register`, data.uuid, false, payload).then(() => {
				this.handleResponse(data, resolve, reject);
			}, (error) => {
				data.error = error;
				this.handleError(data, resolve, reject);
			});
	    });
	}

    publishEvents(data) {
		if (data.outcomes.includes("ok")) {
			new TriggerAction().publish(
				new DisplayToastAction(), 
					{
						message: data.message
					}
			)
			new TriggerAction().publish(
				new LoginAction(), 
					{
						password: data.password
					}
			)
		}
		if (data.outcomes.includes("error")) {
			new TriggerAction().publish(
				new DisplayToastAction(), 
					{
						message: data.message
					}
			)
		}
    }

}



/******* S.D.G. *******/



