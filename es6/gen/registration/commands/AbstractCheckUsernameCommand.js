/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




import AsynchronousCommand from "../../ace/AsynchronousCommand";
import Event from "../../ace/Event";
import * as Utils from "../../ace/Utils";
import * as AppUtils from "../../../src/app/AppUtils";
import * as AppState from "../../ace/AppState";

export default class AbstractCheckUsernameCommand extends AsynchronousCommand {
    constructor() {
        super("registration.CheckUsernameCommand");
    }
    
    initCommandData(data) {
        data.username = AppState.get_rootContainer_registrationView_username();
        data.outcomes = [];
    }

	addEmptyOutcome(data) {
		data.outcomes.push("empty");
	}
	addOkOutcome(data) {
		data.outcomes.push("ok");
	}

	execute(data) {
	    return new Promise((resolve, reject) => {
			AppUtils.httpGet(`${AppUtils.settings.rootPath}/users/username?username=${data.username}`, data.uuid, false).then((response) => {
				data.available = response.available;
				this.handleResponse(data, resolve, reject);
			}, (error) => {
				data.error = error;
				this.handleError(data, resolve, reject);
			});
	    });
	}

    publishEvents(data) {
		if (data.outcomes.includes("empty")) {
			new Event('registration.CheckUsernameEmptyEvent').publish(data);
			AppUtils.stateUpdated(AppState.getAppState());
		}
		if (data.outcomes.includes("ok")) {
			new Event('registration.CheckUsernameOkEvent').publish(data);
			AppUtils.stateUpdated(AppState.getAppState());
		}
    }

}



/******* S.D.G. *******/



