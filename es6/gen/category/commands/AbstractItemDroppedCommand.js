/********************************************************************************
 * generated by de.acegen 1.6.5
 ********************************************************************************/




import SynchronousCommand from "../../ace/SynchronousCommand";
import Event from "../../ace/Event";
import MoveCardsAction from "../../../src/card/actions/MoveCardsAction";
import MoveCategoryAction from "../../../src/category/actions/MoveCategoryAction";
import ChangeOrderCategoryAction from "../../../src/category/actions/ChangeOrderCategoryAction";
import * as AppUtils from "../../../src/AppUtils";
import * as AppState from "../../../src/AppState";

export default class AbstractItemDroppedCommand extends SynchronousCommand {
    constructor() {
        super("category.ItemDroppedCommand");
    }

    initCommandData(data) {
        data.movedCategory = AppState.get(
        	["rootContainer", "mainView", "authorView", "categoryTree", "movedCategory"]
        )
        ;
        data.movedCardIds = AppState.get(
        	["rootContainer", "mainView", "authorView", "cardView", "movedCardIds"]
        )
        ;
        data.outcomes = [];
    }

	addCardOutcome(data) {
		data.outcomes.push("card");
	}
	addMoveCategoryOutcome(data) {
		data.outcomes.push("moveCategory");
	}
	addChangeCategoryOrderOutcome(data) {
		data.outcomes.push("changeCategoryOrder");
	}
	
	publishEvents(data) {
		return new Promise((resolve) => {
			const events = [];
			const actionsToBeTriggered = [];
			if (data.outcomes.includes("card")) {
				events.push(new Event('category.ItemDroppedCardEvent'));
				actionsToBeTriggered.push(
					{
						action: new MoveCardsAction(), 
						data: {
						}
					}
				);
			}
			if (data.outcomes.includes("moveCategory")) {
				events.push(new Event('category.ItemDroppedMoveCategoryEvent'));
				actionsToBeTriggered.push(
					{
						action: new MoveCategoryAction(), 
						data: {
						}
					}
				);
			}
			if (data.outcomes.includes("changeCategoryOrder")) {
				events.push(new Event('category.ItemDroppedChangeCategoryOrderEvent'));
				actionsToBeTriggered.push(
					{
						action: new ChangeOrderCategoryAction(), 
						data: {
						}
					}
				);
			}
			
			this.publish(events, data).then(() => {
		  		AppState.stateUpdated();
				this.trigger(actionsToBeTriggered).then(resolve);
			});
		})
	
	}

}




/******* S.D.G. *******/



