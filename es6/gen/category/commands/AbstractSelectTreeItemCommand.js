/********************************************************************************
 * generated by de.acegen 0.9.13
 ********************************************************************************/




import SynchronousCommand from "../../../gen/ace/SynchronousCommand";
import TriggerAction from "../../../gen/ace/TriggerAction";
import * as AppState from "../../ace/AppState";
import SelectTreeItemOkEvent from "../../../gen/category/events/SelectTreeItemOkEvent";
import LoadCardsAction from "../../../src/card/actions/LoadCardsAction";
import RouteAction from "../../../src/common/actions/RouteAction";

export default class AbstractSelectTreeItemCommand extends SynchronousCommand {
    constructor(commandData) {
        super(commandData, "category.SelectTreeItemCommand");
        this.ok = "ok";
        this.commandData.rootCategory = AppState.get_authorView_categoryTree_rootCategory();
    }

    publishEvents() {
		switch (this.commandData.outcome) {
		case this.ok:
			new SelectTreeItemOkEvent(this.commandData).publish();
			new TriggerAction(new LoadCardsAction()).publish();
			new TriggerAction(new RouteAction(this.commandData.hash)).publish();
			break;
		default:
			throw 'SelectTreeItemCommand unhandled outcome: ' + this.commandData.outcome;
		}
    }
}




/******* S.D.G. *******/



