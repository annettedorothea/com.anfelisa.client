/********************************************************************************
 * generated by de.acegen 1.6.0
 ********************************************************************************/




import AsynchronousCommand from "../../ace/AsynchronousCommand";
import Event from "../../ace/Event";
import TriggerAction from "../../ace/TriggerAction";
import * as AppUtils from "../../../src/AppUtils";
import * as AppState from "../../../src/AppState";
import ReloadCategoryTreeAction from "../../../src/category/actions/ReloadCategoryTreeAction";

export default class AbstractUpdateCategoryCommand extends AsynchronousCommand {
    constructor() {
        super("category.UpdateCategoryCommand");
    }
    
    initCommandData(data) {
        data.rootCategoryId = AppState.get(
        	["rootContainer", "mainView", "authorView", "categoryTree", "rootCategory", "categoryId"]
        )
        ;
        data.selectedCategoryId = AppState.get(
        	["rootContainer", "mainView", "authorView", "categoryTree", "selectedCategory", "categoryId"]
        )
        ;
        data.categoryId = AppState.get(
        	["rootContainer", "mainView", "authorView", "categoryTree", "selectedCategory", "categoryId"]
        )
        ;
        data.categoryName = AppState.get(
        	["rootContainer", "mainView", "authorView", "categoryTree", "categoryDialog", "categoryName"]
        )
        ;
        data.outcomes = [];
    }

	addOkOutcome(data) {
		data.outcomes.push("ok");
	}

	execute(data) {
	    return new Promise((resolve, reject) => {
	    	let payload = {
	    		categoryId : data.categoryId,
	    		categoryName : data.categoryName
	    	};
			AppUtils.httpPut(`${AppUtils.settings.rootPath}/category/update`, data.uuid, true, payload).then(() => {
				this.handleResponse(data, resolve, reject);
			}, (error) => {
				data.error = error;
				this.handleError(data, resolve, reject);
			});
	    });
	}

    publishEvents(data) {
		if (data.outcomes.includes("ok")) {
			new Event('category.UpdateCategoryOkEvent').publish(data);
			AppState.stateUpdated();
			new TriggerAction().publish(
				new ReloadCategoryTreeAction(), 
					{
						selectedCategoryId: data.selectedCategoryId, 
						categoryIdToBeExpanded: data.categoryIdToBeExpanded
					}
			)
		}
    }

}



/******* S.D.G. *******/



