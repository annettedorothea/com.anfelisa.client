	/********************************************************************************
	 * generated by de.acegen
	 ********************************************************************************/
	
	
	

	import SynchronousCommand from "../../ace/SynchronousCommand";
	import Event from "../../ace/Event";
	import MoveCategoryAllowedAction from "../../../src/category/actions/MoveCategoryAllowedAction";
	import * as AppUtils from "../../../src/AppUtils";
	import * as AppState from "../../../src/AppState";
	
	export default class AbstractSelectTargetCategoryCommand extends SynchronousCommand {
	    constructor() {
	        super("category.SelectTargetCategoryCommand");
	    }
	
	    initCommandData(data) {
	        data.rootCategoryInMoveDialog = AppState.get(
	        	["rootContainer", "mainView", "authorView", "categoryTree", "moveCategory", "rootCategoryInMoveDialog"]
	        )
	        ;
	        data.outcomes = [];
	    }

		addOkOutcome(data) {
			data.outcomes.push("ok");
		}
		
		publishEvents(data) {
			const events = [];
			const actionsToBeTriggered = [];
			if (data.outcomes.includes("ok")) {
				events.push(new Event('category.SelectTargetCategoryOkEvent'));
				actionsToBeTriggered.push(
					{
						action: new MoveCategoryAllowedAction(), 
						data: {
						}
					}
				);
			}
			
			this.publish(events, data);
		  	AppState.stateUpdated();
			this.trigger(actionsToBeTriggered);
	
		}

	}
	
	
	
	/******* S.D.G. *******/
	
	
	
