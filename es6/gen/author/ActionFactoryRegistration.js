import ACEController from "../ace/ACEController";
import LoadCategoriesAction from "../../src/author/actions/LoadCategoriesAction";
import CreateCategoryAction from "../../src/author/actions/CreateCategoryAction";
import UpdateCategoryAction from "../../src/author/actions/UpdateCategoryAction";
import DeleteCategoryAction from "../../src/author/actions/DeleteCategoryAction";
import NameOfNewCategoryChangedAction from "../../src/author/actions/NameOfNewCategoryChangedAction";
import CancelNewCategoryAction from "../../src/author/actions/CancelNewCategoryAction";
import NameOfEditedCategoryChangedAction from "../../src/author/actions/NameOfEditedCategoryChangedAction";
import CancelEditCategoryAction from "../../src/author/actions/CancelEditCategoryAction";
import EditCategoryAction from "../../src/author/actions/EditCategoryAction";
import DeleteCategoryClickAction from "../../src/author/actions/DeleteCategoryClickAction";
import CancelDeleteCategoryAction from "../../src/author/actions/CancelDeleteCategoryAction";
import CreateCardAction from "../../src/author/actions/CreateCardAction";
import UpdateCardAction from "../../src/author/actions/UpdateCardAction";
import DeleteCardAction from "../../src/author/actions/DeleteCardAction";
import GivenOfNewCardChangedAction from "../../src/author/actions/GivenOfNewCardChangedAction";
import SearchDuplicateCardsAction from "../../src/author/actions/SearchDuplicateCardsAction";
import WantedOfNewCardChangedAction from "../../src/author/actions/WantedOfNewCardChangedAction";
import CancelNewCardAction from "../../src/author/actions/CancelNewCardAction";
import GivenOfEditedCardChangedAction from "../../src/author/actions/GivenOfEditedCardChangedAction";
import WantedOfEditedCardChangedAction from "../../src/author/actions/WantedOfEditedCardChangedAction";
import CancelEditCardAction from "../../src/author/actions/CancelEditCardAction";
import EditCardAction from "../../src/author/actions/EditCardAction";
import DeleteCardClickAction from "../../src/author/actions/DeleteCardClickAction";
import CancelDeleteCardAction from "../../src/author/actions/CancelDeleteCardAction";
import FilterCardsAction from "../../src/author/actions/FilterCardsAction";
import TranslateAction from "../../src/author/actions/TranslateAction";
import PassValueToDictionaryAction from "../../src/author/actions/PassValueToDictionaryAction";
import ToggleDictionaryLookupOfNewCategoryAction from "../../src/author/actions/ToggleDictionaryLookupOfNewCategoryAction";
import ToggleDictionaryLookupOfEditedCategoryAction from "../../src/author/actions/ToggleDictionaryLookupOfEditedCategoryAction";
import GivenLanguageOfNewCategoryChangedAction from "../../src/author/actions/GivenLanguageOfNewCategoryChangedAction";
import GivenLanguageOfEditedCategoryChangedAction from "../../src/author/actions/GivenLanguageOfEditedCategoryChangedAction";
import WantedLanguageOfNewCategoryChangedAction from "../../src/author/actions/WantedLanguageOfNewCategoryChangedAction";
import WantedLanguageOfEditedCategoryChangedAction from "../../src/author/actions/WantedLanguageOfEditedCategoryChangedAction";
import ToggleInputOrderAction from "../../src/author/actions/ToggleInputOrderAction";
import ToggleUseDictionaryAction from "../../src/author/actions/ToggleUseDictionaryAction";
import LoadWantedImageOfNewCardAction from "../../src/author/actions/LoadWantedImageOfNewCardAction";
import LoadWantedImageOfEditedCardAction from "../../src/author/actions/LoadWantedImageOfEditedCardAction";
import RemoveNewCardImageAction from "../../src/author/actions/RemoveNewCardImageAction";
import RemoveEditedCardImageAction from "../../src/author/actions/RemoveEditedCardImageAction";
import ToggleScheduleCardSelectionAction from "../../src/author/actions/ToggleScheduleCardSelectionAction";
import ToggleAllScheduleCardSelectionAction from "../../src/author/actions/ToggleAllScheduleCardSelectionAction";
import ScheduleSelectedCardsAction from "../../src/author/actions/ScheduleSelectedCardsAction";
import InviteUserAction from "../../src/author/actions/InviteUserAction";
import RevokeUserAccessClickAction from "../../src/author/actions/RevokeUserAccessClickAction";
import CancelRevokeUserAccessAction from "../../src/author/actions/CancelRevokeUserAccessAction";
import RevokeUserAccessAction from "../../src/author/actions/RevokeUserAccessAction";

export default class ActionFactoryRegistrationAuthor {

	static init() {
		ACEController.registerFactory('author.LoadCategoriesAction', (actionData) => new LoadCategoriesAction(actionData, 'author.LoadCategoriesAction'));
		ACEController.registerFactory('author.CreateCategoryAction', (actionData) => new CreateCategoryAction(actionData, 'author.CreateCategoryAction'));
		ACEController.registerFactory('author.UpdateCategoryAction', (actionData) => new UpdateCategoryAction(actionData, 'author.UpdateCategoryAction'));
		ACEController.registerFactory('author.DeleteCategoryAction', (actionData) => new DeleteCategoryAction(actionData, 'author.DeleteCategoryAction'));
		ACEController.registerFactory('author.NameOfNewCategoryChangedAction', (actionData) => new NameOfNewCategoryChangedAction(actionData, 'author.NameOfNewCategoryChangedAction'));
		ACEController.registerFactory('author.CancelNewCategoryAction', (actionData) => new CancelNewCategoryAction(actionData, 'author.CancelNewCategoryAction'));
		ACEController.registerFactory('author.NameOfEditedCategoryChangedAction', (actionData) => new NameOfEditedCategoryChangedAction(actionData, 'author.NameOfEditedCategoryChangedAction'));
		ACEController.registerFactory('author.CancelEditCategoryAction', (actionData) => new CancelEditCategoryAction(actionData, 'author.CancelEditCategoryAction'));
		ACEController.registerFactory('author.EditCategoryAction', (actionData) => new EditCategoryAction(actionData, 'author.EditCategoryAction'));
		ACEController.registerFactory('author.DeleteCategoryClickAction', (actionData) => new DeleteCategoryClickAction(actionData, 'author.DeleteCategoryClickAction'));
		ACEController.registerFactory('author.CancelDeleteCategoryAction', (actionData) => new CancelDeleteCategoryAction(actionData, 'author.CancelDeleteCategoryAction'));
		ACEController.registerFactory('author.CreateCardAction', (actionData) => new CreateCardAction(actionData, 'author.CreateCardAction'));
		ACEController.registerFactory('author.UpdateCardAction', (actionData) => new UpdateCardAction(actionData, 'author.UpdateCardAction'));
		ACEController.registerFactory('author.DeleteCardAction', (actionData) => new DeleteCardAction(actionData, 'author.DeleteCardAction'));
		ACEController.registerFactory('author.GivenOfNewCardChangedAction', (actionData) => new GivenOfNewCardChangedAction(actionData, 'author.GivenOfNewCardChangedAction'));
		ACEController.registerFactory('author.SearchDuplicateCardsAction', (actionData) => new SearchDuplicateCardsAction(actionData, 'author.SearchDuplicateCardsAction'));
		ACEController.registerFactory('author.WantedOfNewCardChangedAction', (actionData) => new WantedOfNewCardChangedAction(actionData, 'author.WantedOfNewCardChangedAction'));
		ACEController.registerFactory('author.CancelNewCardAction', (actionData) => new CancelNewCardAction(actionData, 'author.CancelNewCardAction'));
		ACEController.registerFactory('author.GivenOfEditedCardChangedAction', (actionData) => new GivenOfEditedCardChangedAction(actionData, 'author.GivenOfEditedCardChangedAction'));
		ACEController.registerFactory('author.WantedOfEditedCardChangedAction', (actionData) => new WantedOfEditedCardChangedAction(actionData, 'author.WantedOfEditedCardChangedAction'));
		ACEController.registerFactory('author.CancelEditCardAction', (actionData) => new CancelEditCardAction(actionData, 'author.CancelEditCardAction'));
		ACEController.registerFactory('author.EditCardAction', (actionData) => new EditCardAction(actionData, 'author.EditCardAction'));
		ACEController.registerFactory('author.DeleteCardClickAction', (actionData) => new DeleteCardClickAction(actionData, 'author.DeleteCardClickAction'));
		ACEController.registerFactory('author.CancelDeleteCardAction', (actionData) => new CancelDeleteCardAction(actionData, 'author.CancelDeleteCardAction'));
		ACEController.registerFactory('author.FilterCardsAction', (actionData) => new FilterCardsAction(actionData, 'author.FilterCardsAction'));
		ACEController.registerFactory('author.TranslateAction', (actionData) => new TranslateAction(actionData, 'author.TranslateAction'));
		ACEController.registerFactory('author.PassValueToDictionaryAction', (actionData) => new PassValueToDictionaryAction(actionData, 'author.PassValueToDictionaryAction'));
		ACEController.registerFactory('author.ToggleDictionaryLookupOfNewCategoryAction', (actionData) => new ToggleDictionaryLookupOfNewCategoryAction(actionData, 'author.ToggleDictionaryLookupOfNewCategoryAction'));
		ACEController.registerFactory('author.ToggleDictionaryLookupOfEditedCategoryAction', (actionData) => new ToggleDictionaryLookupOfEditedCategoryAction(actionData, 'author.ToggleDictionaryLookupOfEditedCategoryAction'));
		ACEController.registerFactory('author.GivenLanguageOfNewCategoryChangedAction', (actionData) => new GivenLanguageOfNewCategoryChangedAction(actionData, 'author.GivenLanguageOfNewCategoryChangedAction'));
		ACEController.registerFactory('author.GivenLanguageOfEditedCategoryChangedAction', (actionData) => new GivenLanguageOfEditedCategoryChangedAction(actionData, 'author.GivenLanguageOfEditedCategoryChangedAction'));
		ACEController.registerFactory('author.WantedLanguageOfNewCategoryChangedAction', (actionData) => new WantedLanguageOfNewCategoryChangedAction(actionData, 'author.WantedLanguageOfNewCategoryChangedAction'));
		ACEController.registerFactory('author.WantedLanguageOfEditedCategoryChangedAction', (actionData) => new WantedLanguageOfEditedCategoryChangedAction(actionData, 'author.WantedLanguageOfEditedCategoryChangedAction'));
		ACEController.registerFactory('author.ToggleInputOrderAction', (actionData) => new ToggleInputOrderAction(actionData, 'author.ToggleInputOrderAction'));
		ACEController.registerFactory('author.ToggleUseDictionaryAction', (actionData) => new ToggleUseDictionaryAction(actionData, 'author.ToggleUseDictionaryAction'));
		ACEController.registerFactory('author.LoadWantedImageOfNewCardAction', (actionData) => new LoadWantedImageOfNewCardAction(actionData, 'author.LoadWantedImageOfNewCardAction'));
		ACEController.registerFactory('author.LoadWantedImageOfEditedCardAction', (actionData) => new LoadWantedImageOfEditedCardAction(actionData, 'author.LoadWantedImageOfEditedCardAction'));
		ACEController.registerFactory('author.RemoveNewCardImageAction', (actionData) => new RemoveNewCardImageAction(actionData, 'author.RemoveNewCardImageAction'));
		ACEController.registerFactory('author.RemoveEditedCardImageAction', (actionData) => new RemoveEditedCardImageAction(actionData, 'author.RemoveEditedCardImageAction'));
		ACEController.registerFactory('author.ToggleScheduleCardSelectionAction', (actionData) => new ToggleScheduleCardSelectionAction(actionData, 'author.ToggleScheduleCardSelectionAction'));
		ACEController.registerFactory('author.ToggleAllScheduleCardSelectionAction', (actionData) => new ToggleAllScheduleCardSelectionAction(actionData, 'author.ToggleAllScheduleCardSelectionAction'));
		ACEController.registerFactory('author.ScheduleSelectedCardsAction', (actionData) => new ScheduleSelectedCardsAction(actionData, 'author.ScheduleSelectedCardsAction'));
		ACEController.registerFactory('author.InviteUserAction', (actionData) => new InviteUserAction(actionData, 'author.InviteUserAction'));
		ACEController.registerFactory('author.RevokeUserAccessClickAction', (actionData) => new RevokeUserAccessClickAction(actionData, 'author.RevokeUserAccessClickAction'));
		ACEController.registerFactory('author.CancelRevokeUserAccessAction', (actionData) => new CancelRevokeUserAccessAction(actionData, 'author.CancelRevokeUserAccessAction'));
		ACEController.registerFactory('author.RevokeUserAccessAction', (actionData) => new RevokeUserAccessAction(actionData, 'author.RevokeUserAccessAction'));
	}

}

/*       S.D.G.       */
