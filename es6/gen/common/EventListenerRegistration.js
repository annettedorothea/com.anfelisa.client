/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




import * as ACEController from "../ace/ACEController";
import * as AppState from "../../src/AppState";

export default class EventListenerRegistrationCommon {

	static init() {
		ACEController.registerListener('common.InitOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "language"]
				)
			});
		ACEController.registerListener('common.InitOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "messageContainer", "messages"]
				)
			});
		ACEController.registerListener('common.InitOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "spinner"], 
					["display"]
				)
			});
		ACEController.registerListener('common.InitUserEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "loggedInUser", "token"]
				)
			});
		ACEController.registerListener('common.InitUserEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "spinner"], 
					["display"]
				)
			});
		ACEController.registerListener('common.GetUserInfoOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "loggedInUser", "username"]
				)
			});
		ACEController.registerListener('common.GetUserInfoOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "loggedInUser", "token"]
				)
			});
		ACEController.registerListener('common.RouteChangedLoginEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "loginView"], 
					["username", "password", "saveInLocalStorage", "login"]
				)
			});
		ACEController.registerListener('common.RouteChangedPrivacyPolicyEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "privacyPolicyView"]
				)
			});
		ACEController.registerListener('common.RouteChangedRegistrationEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "registrationView"], 
					["username", "password", "passwordRepetition", "email", "buttons"]
				)
			});
		ACEController.registerListener('common.RouteChangedForgotPasswordEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "forgotPasswordView"], 
					["username", "buttons"]
				)
			});
		ACEController.registerListener('common.RouteChangedResetPasswordEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "resetPasswordView"], 
					["token", "password", "passwordRepetition", "buttons"]
				)
			});
		ACEController.registerListener('common.RouteChangedDashboardEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "dashboardView"], 
					["boxList", "newBox", "deleteBox"]
				)
			});
		ACEController.registerListener('common.RouteChangedCategoriesEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "authorView"], 
					["boxId", "reverse", "categoryTree"]
				)
			});
		ACEController.registerListener('common.RouteChangedProfileEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "profileView"], 
					["role", "deletable", "showDeleteUserDialog", "username", "email", "buttons"]
				)
			});
		ACEController.registerListener('common.RouteChangedNextCardEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "queryCardView"], 
					["nextCard", "openTodaysCards", "allTodaysCards", "reverse", "boxId", "boxName"]
				)
			});
		ACEController.registerListener('common.RouteChangedBoxSettingsEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "boxSettingsView"], 
					["boxId", "boxSettings"]
				)
			});
		ACEController.registerListener('common.RouteChangedAllActiveCardsEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "allActiveCardsView"], 
					["boxId", "editable", "activeCardList", "selectedCardIds", "selectedLastQualityFilters"]
				)
			});
		ACEController.registerListener('common.RouteChangedBoxCreateEvent', (data) => {
				AppState.set({mainView: {}}, ["rootContainer", "mainView"]);
				AppState.set(
					data, 
					["rootContainer", "mainView", "boxSettingsView"], 
					["boxId", "boxSettings"]
				)
			});
		ACEController.registerListener('common.RouteToDefaultOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToQueryCardsOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToAuthorViewOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToBoxSettingsOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToBoxCreateOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToActiveCardsOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToForgotPasswordOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToPrivacyPolicyOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToRegistrationOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToProfileViewOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.RouteToSelectedCategoryOkEvent', (data) => {
				AppState.setLocation(
					data, 
					["rootContainer", "hash"]
				)
			});
		ACEController.registerListener('common.LogoutOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "loggedInUser"], 
					["username", "token"]
				)
			});
		ACEController.registerListener('common.LogoutOkEvent', (data) => {
				AppState.setStorage(
					data, 
					["rootContainer", "token"]
				)
			});
		ACEController.registerListener('common.DisplayToastOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "messageContainer", "messages"]
				)
			});
		ACEController.registerListener('common.DisplayErrorToastOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "messageContainer", "messages"]
				)
			});
		ACEController.registerListener('common.DisplayWarningToastOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "messageContainer", "messages"]
				)
			});
		ACEController.registerListener('common.HideToastOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "messageContainer", "messages"]
				)
			});
		ACEController.registerListener('common.DestroyToastOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "messageContainer", "messages"]
				)
			});
		ACEController.registerListener('common.DisplaySaveBugDialogOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "saveBugDialog", "display"]
				)
			});
		ACEController.registerListener('common.DisplayVersionMismatchDialogOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "versionMismatchDialog", "display"]
				)
			});
		ACEController.registerListener('common.CancelVersionMismatchDialogOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "versionMismatchDialog", "display"]
				)
			});
		ACEController.registerListener('common.DisplayVersionMismatchErrorDialogOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "versionMismatchErrorDialog", "display"]
				)
			});
		ACEController.registerListener('common.CancelSaveBugDialogOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "saveBugDialog", "display"]
				)
			});
		ACEController.registerListener('common.HideSaveBugDialogOkEvent', (data) => {
				AppState.set(
					data, 
					["rootContainer", "saveBugDialog", "display"]
				)
			});
	}

}




/******* S.D.G. *******/



