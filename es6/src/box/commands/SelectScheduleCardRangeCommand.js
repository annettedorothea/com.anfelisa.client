/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/




import AbstractSelectScheduleCardRangeCommand from "../../../gen/box/commands/AbstractSelectScheduleCardRangeCommand";

export default class SelectScheduleCardRangeCommand extends AbstractSelectScheduleCardRangeCommand {
    execute(data) {
        if (data.selectedCardIds.length === 0) {
            this.addNoSelectionOutcome(data)
        } else {
            const indexOfSelection = data.activeCardList.findIndex(card => card.cardId === data.cardId);
            const selectedIndices = data.selectedCardIds.map(selectedCardId => data.activeCardList.findIndex(card => card.cardId === selectedCardId)).sort();
            const firstSelectedIndex = selectedIndices.length > 0 ? selectedIndices[0] : null;
            const lastSelectedIndex = selectedIndices.length > 0 ? selectedIndices[selectedIndices.length - 1] : null;
            let start, end = 0;
            if (firstSelectedIndex === lastSelectedIndex) {
                if (indexOfSelection < firstSelectedIndex) {
                    start = indexOfSelection;
                    end = firstSelectedIndex;
                } else {
                    start = firstSelectedIndex;
                    end = indexOfSelection;
                }
            } else {
                if (indexOfSelection < firstSelectedIndex) {
                    start = indexOfSelection;
                    end = firstSelectedIndex;
                } else if (firstSelectedIndex < indexOfSelection && indexOfSelection < lastSelectedIndex) {
                    start = firstSelectedIndex;
                    end = indexOfSelection;
                } else {
                    start = lastSelectedIndex;
                    end = indexOfSelection;
                }
            }
            for (let i = start; i <= end; i++) {
                const cardId = data.activeCardList[i].cardId
                const index = data.selectedCardIds.indexOf(cardId);
                if (index === -1) {
                    data.selectedCardIds.push(cardId);
                }
            }
            this.addOkOutcome(data);
        }
        return data;
    }
}




/******* S.D.G. *******/



