// noinspection JSUnresolvedVariable

/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




import React from "react";

import { RootCategory } from "./categoryTree/RootCategory";
import { CategoryDialog } from "./categoryTree/CategoryDialog";
import { InviteUserDialog } from "./categoryTree/InviteUserDialog";
import { DeleteCategoryDialog } from "./categoryTree/DeleteCategoryDialog";
import {
	createReverseBox,
	deleteCategoryClick,
	editCategoryClick, filterNonScheduledCards,
	inviteUserClick,
	newCategoryClick,
	priorityChanged
} from "../../../../../gen/category/ActionFunctions";
import {route} from "../../../../../gen/common/ActionFunctions";
import {Texts} from "../../../../app/Texts";
import {InviteUserEditableDialog} from "./categoryTree/InviteUserEditableDialog";
import {translate} from "../../../../AppUtils";

export const CategoryTree = (props) => {
	if (!props.rootCategory) {
		return null;
	}

	const filterPriority = (priority) => {
		const priorityClass = (index) => {
			if (priority && index <= priority) {
				return "fa fa-star";
			}
			return "far fa-star";
		}
		return <span className="priority noBreak">
            <i
				className={priorityClass(1)}
				onClick={() => priorityChanged(priority === 1 ? null: 1)}
			/>
            <i
				className={priorityClass(2)}
				onClick={() => priorityChanged(priority === 2 ? null: 1)}
			/>
            <i
				className={priorityClass(3)}
				onClick={() => priorityChanged(priority === 3 ? null: 1)}
			/>
        </span>
	}

	return <div className="categoryTree">
		<CategoryDialog {...props.categoryDialog}  />
		<InviteUserDialog {...props.inviteUserDialog}  />
		<DeleteCategoryDialog {...props.deleteCategoryDialog}  />
		<InviteUserEditableDialog {...props.inviteUserEditableDialog}  />
		<div>
			<button
				onClick={() => route("#dashboard")}
				title={translate(Texts.categoryTree.back)}
			>
				<i className="fa fa-arrow-left"/>
			</button>
			{props.rootCategory.editable ?
				<button
					disabled={!props.selectedCategory}
					onClick={newCategoryClick}
					title={translate(Texts.categoryTree.newCategory.newChildCategory)}
					id="new"
				>
					<i className="fas fa-plus"/>
				</button> :
				null
			}
			{props.rootCategory.editable ?
				<button
					disabled={!props.selectedCategory}
					onClick={editCategoryClick}
					title={translate(Texts.categoryTree.editCategory.title)}
				>
					<i className="fas fa-pen"/>
				</button> :
				null
			}
			{props.rootCategory.editable ?
				<button
					disabled={!props.selectedCategory}
					onClick={inviteUserClick}
					title={translate(Texts.categoryTree.inviteUser.title)}
				>
					<i className="fas fa-share"/>
				</button> :
				null
			}
			{props.rootCategory.editable ?
				<button
					disabled={
						!props.selectedCategory ||
						props.selectedCategory.empty === false ||
						props.rootCategory.categoryId === props.selectedCategory.categoryId
					}
					onClick={deleteCategoryClick}
					title={translate(Texts.categoryTree.delete)}
				>
					<i className="far fa-trash-alt"/>
				</button> :
				null
			}
			{props.reverseBoxExists === false ?
				<button
					onClick={createReverseBox}
					title={translate(Texts.categoryTree.createReverseBox)}
				>
					<i className="fas fa-plus-circle"/>
				</button> :
				null
			}
		</div>
		<div className="form">
			<input
				type="checkbox"
				onClick={(event) => filterNonScheduledCards(event.target.value)}
				value={props.filterNonScheduled}
				id="filterNonScheduled"
			/>
			<label htmlFor="filterNonScheduled">{translate(Texts.categoryTree.filterNonScheduled)}</label>
			{props.filterNonScheduled === true ? filterPriority(props.priority) : null}
		</div>
		<div className="categoryTreeItems">
			<RootCategory
				{...props.rootCategory}
				selectedCategory={props.selectedCategory}

				dropAllowed={props.dropAllowed && props.rootCategory.editable}
				dropTargetCategoryId={props.dropTargetCategoryId}
			/>
		</div>
	</div>
}



/******* S.D.G. *******/



