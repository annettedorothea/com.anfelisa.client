/********************************************************************************
 * generated by de.acegen 1.1.0
 ********************************************************************************/




import { div, h1, label, input, table, tbody, ul, li, tr, td } from "../../../../gen/components/ReactHelper";

export function uiElement(attributes) {
	return div({}, [
		h1({}, ["QUERYCARDVIEW"]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "cardId"
			}, ["CARDID"]), 
			input({
				id: "cardId",
				value: attributes.cardId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.cardId])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "categoryId"
			}, ["CATEGORYID"]), 
			input({
				id: "categoryId",
				value: attributes.categoryId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.categoryId])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "categoryName"
			}, ["CATEGORYNAME"]), 
			input({
				id: "categoryName",
				value: attributes.categoryName, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.categoryName])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "count"
			}, ["COUNT"]), 
			input({
				id: "count",
				value: attributes.count, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.count])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "given"
			}, ["GIVEN"]), 
			input({
				id: "given",
				value: attributes.given, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.given])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "image"
			}, ["IMAGE"]), 
			input({
				id: "image",
				value: attributes.image, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.image])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "lastQuality"
			}, ["LASTQUALITY"]), 
			input({
				id: "lastQuality",
				value: attributes.lastQuality, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.lastQuality])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "rootCategoryId"
			}, ["ROOTCATEGORYID"]), 
			input({
				id: "rootCategoryId",
				value: attributes.rootCategoryId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.rootCategoryId])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "scheduledCardId"
			}, ["SCHEDULEDCARDID"]), 
			input({
				id: "scheduledCardId",
				value: attributes.scheduledCardId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.scheduledCardId])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "reinforceCardId"
			}, ["REINFORCECARDID"]), 
			input({
				id: "reinforceCardId",
				value: attributes.reinforceCardId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.reinforceCardId])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "scheduledDate"
			}, ["SCHEDULEDDATE"]), 
			input({
				id: "scheduledDate",
				value: attributes.scheduledDate, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.scheduledDate])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "scoredDate"
			}, ["SCOREDDATE"]), 
			input({
				id: "scoredDate",
				value: attributes.scoredDate, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.scoredDate])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "wanted"
			}, ["WANTED"]), 
			input({
				id: "wanted",
				value: attributes.wanted, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.wanted])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "openTodaysCards"
			}, ["OPENTODAYSCARDS"]), 
			input({
				id: "openTodaysCards",
				value: attributes.openTodaysCards, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.openTodaysCards])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "allTodaysCards"
			}, ["ALLTODAYSCARDS"]), 
			input({
				id: "allTodaysCards",
				value: attributes.allTodaysCards, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.allTodaysCards])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "index"
			}, ["INDEX"]), 
			input({
				id: "index",
				value: attributes.index, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.index])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "enableScoreButtons"
			}, ["ENABLESCOREBUTTONS"]), 
			input({
				id: "enableScoreButtons",
				value: attributes.enableScoreButtons, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.enableScoreButtons])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "displayImage"
			}, ["DISPLAYIMAGE"]), 
			input({
				id: "displayImage",
				value: attributes.displayImage, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.displayImage])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "boxId"
			}, ["BOXID"]), 
			input({
				id: "boxId",
				value: attributes.boxId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.boxId])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "reverse"
			}, ["REVERSE"]), 
			input({
				id: "reverse",
				value: attributes.reverse, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.reverse])
		])
	]);
}



/******* S.D.G. *******/



