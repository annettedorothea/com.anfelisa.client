/********************************************************************************
 * generated by de.acegen 1.1.0
 ********************************************************************************/




import { div, h1, label, input, table, tbody, ul, li, tr, td } from "../../../../../gen/components/ReactHelper";

export function uiElement(attributes) {
	return tr({class: ""}, [
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "cardId"
			}, ["CARDID"]), 
			input({
				id: "cardId",
				value: attributes.cardId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.cardId])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "given"
			}, ["GIVEN"]), 
			input({
				id: "given",
				value: attributes.given, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.given])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "wanted"
			}, ["WANTED"]), 
			input({
				id: "wanted",
				value: attributes.wanted, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.wanted])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "image"
			}, ["IMAGE"]), 
			input({
				id: "image",
				value: attributes.image, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.image])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "cardAuthor"
			}, ["CARDAUTHOR"]), 
			input({
				id: "cardAuthor",
				value: attributes.cardAuthor, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.cardAuthor])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "cardIndex"
			}, ["CARDINDEX"]), 
			input({
				id: "cardIndex",
				value: attributes.cardIndex, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.cardIndex])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "categoryId"
			}, ["CATEGORYID"]), 
			input({
				id: "categoryId",
				value: attributes.categoryId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.categoryId])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "rootCategoryId"
			}, ["ROOTCATEGORYID"]), 
			input({
				id: "rootCategoryId",
				value: attributes.rootCategoryId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.rootCategoryId])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "priority"
			}, ["PRIORITY"]), 
			input({
				id: "priority",
				value: attributes.priority, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.priority])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "next"
			}, ["NEXT"]), 
			input({
				id: "next",
				value: attributes.next, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.next])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "ef"
			}, ["EF"]), 
			input({
				id: "ef",
				value: attributes.ef, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.ef])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "interval"
			}, ["INTERVAL"]), 
			input({
				id: "interval",
				value: attributes.interval, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.interval])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "count"
			}, ["COUNT"]), 
			input({
				id: "count",
				value: attributes.count, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.count])
		]),
		td({class: ""}, [
			label({
				class: "",
				htmlFor: "lastQuality"
			}, ["LASTQUALITY"]), 
			input({
				id: "lastQuality",
				value: attributes.lastQuality, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.lastQuality])
		])
	]);
}



/******* S.D.G. *******/



