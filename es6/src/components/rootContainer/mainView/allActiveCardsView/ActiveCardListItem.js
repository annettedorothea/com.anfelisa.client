// noinspection JSUnresolvedVariable

/********************************************************************************
 * generated by de.acegen
 ********************************************************************************/


import React from "react";
import {translate} from "../../../../AppUtils";
import {Texts} from "../../../../app/Texts";
import {Priority} from "../../../common/Priority";


export const ActiveCardListItem = (props) => {
    const onCheckboxClicked = (e) => {
        if (e.nativeEvent.shiftKey === true) {
            props.selectScheduleCardRange(props.cardId)
        } else {
            props.toggleScheduleCardSelection(props.cardId)
        }
    }

    const priorityChanged = (priority) => {
        if (props.editable) {
            props.updateCardPriority(props.cardId, priority).then();
        }
    }

    const thumbsUp = () => {
        if (props.ef > 2.5) {
            return <div title={props.ef}>
                <i className="far fa-thumbs-up"/>
                <i className="far fa-thumbs-up"/>
                <i className="far fa-thumbs-up"/>
            </div>
        }
        if (props.ef > 1.3) {
            return <div title={props.ef}>
                <i className="far fa-thumbs-up"/>
                <i className="far fa-thumbs-up"/>
            </div>
        }
        return <div title={props.ef}>
            <i className="far fa-thumbs-up"/>
        </div>
    }

    const card = (text) => {
        if (text.indexOf("data:image") === 0) {
            return <div className="preview">
                <img src={text} alt="image"/>
            </div>
        }
        return <div className="preview">
            <pre>{text}</pre>
        </div>

    }

    if (props.hide === true) {
        return null;
    }

    const count = translate(Texts.allActiveCards.count, [props.count]);
    const interval = props.interval === 1 ?
        translate(Texts.allActiveCards.intervalOne) :
        translate(Texts.allActiveCards.interval, [props.interval]);
    const date = new Date(props.next).toLocaleDateString();
    const title = `${date} - ${interval} - ${count}`

    return <div className="cardListItem">
        <input
            type="checkbox"
            onChange={onCheckboxClicked}
            checked={props.selectedCardIds.indexOf(props.cardId) >= 0}
        />
        <div className="givenAndWanted">
            {card(props.given)}
            {card(props.wanted)}
        </div>
        <Priority priority={props.priority} editable={props.editable} priorityChanged={priorityChanged}/>
        <div className={`quality quality_${props.lastQuality}`}>
            {thumbsUp()}
        </div>
        <div className="schedule">
            {props.next ?
                <i className="far fa-calendar-check" title={title}></i> : ""}
        </div>
    </div>
}


/******* S.D.G. *******/



