/********************************************************************************
 * generated by de.acegen 1.1.0
 ********************************************************************************/




import { div, h1, label, input, table, tbody, ul, li, tr, td, selectedCategory, rootCategory, movedCategory } from "../../../../../gen/components/ReactHelper";

export function uiElement(attributes) {
	return div({}, [
		h1({}, ["CATEGORYTREE"]),
		selectedCategory(),
		rootCategory(),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "displayDeleteCategory"
			}, ["DISPLAYDELETECATEGORY"]), 
			input({
				id: "displayDeleteCategory",
				value: attributes.displayDeleteCategory, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.displayDeleteCategory])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "categoryName"
			}, ["CATEGORYNAME"]), 
			input({
				id: "categoryName",
				value: attributes.categoryName, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.categoryName])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "displayEditCategory"
			}, ["DISPLAYEDITCATEGORY"]), 
			input({
				id: "displayEditCategory",
				value: attributes.displayEditCategory, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.displayEditCategory])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "displayNewCategory"
			}, ["DISPLAYNEWCATEGORY"]), 
			input({
				id: "displayNewCategory",
				value: attributes.displayNewCategory, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.displayNewCategory])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "displayInviteUser"
			}, ["DISPLAYINVITEUSER"]), 
			input({
				id: "displayInviteUser",
				value: attributes.displayInviteUser, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.displayInviteUser])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "usernameSearchString"
			}, ["USERNAMESEARCHSTRING"]), 
			input({
				id: "usernameSearchString",
				value: attributes.usernameSearchString, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.usernameSearchString])
		]),
		div({}, [
			ul({class: ""}, [
				attributes.usernames.map((item) => li({}, [item]))
			])
		]),
		div({}, [
			ul({class: ""}, [
				attributes.invitedUsernames.map((item) => li({}, [item]))
			])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "dropAllowed"
			}, ["DROPALLOWED"]), 
			input({
				id: "dropAllowed",
				value: attributes.dropAllowed, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.dropAllowed])
		]),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "dropTargetCategoryId"
			}, ["DROPTARGETCATEGORYID"]), 
			input({
				id: "dropTargetCategoryId",
				value: attributes.dropTargetCategoryId, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.dropTargetCategoryId])
		]),
		movedCategory(),
		div({class: ""}, [
			label({
				class: "",
				htmlFor: "previewCsv"
			}, ["PREVIEWCSV"]), 
			input({
				id: "previewCsv",
				value: attributes.previewCsv, 
				class: "", 
				onChange:(e) => console.log(e.target.value),
				type: "text"
			}), 
			div({class: ""}, [attributes.previewCsv])
		])
	]);
}



/******* S.D.G. *******/



