/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




import React from "react";
import {
	cancelInviteUser,
	invitedUsernameChanged,
	inviteUser,
	inviteUserNextStep
} from "../../../../../../gen/category/ActionFunctions";
import {Texts} from "../../../../../app/Texts";


export const InviteUserDialog = (props) => {
	if (props.display !== true) {
		return null;
	}
	let usernames = [];
	if (props.usernames) {
		usernames = props.usernames.map(username => {
			return <li key={username}>
				<a onClick={() => inviteUserNextStep(username, false)}>{username}</a>
			</li>
		})
	}
	let invitedUsernames = [];
	if (props.invitedUsers) {
		invitedUsernames = props.invitedUsers.map(user => {
			return <li key={user.invitedUsername}>
				<a onClick={() => inviteUserNextStep(user.invitedUsername, user.editable)}>{user.invitedUsername} {user.editable && <i className="fas fa-pen"/>}</a>
			</li>
		})
	}
	return <div className="modal">
		<div className="modalContent form">
			<h2>{Texts.categoryTree.inviteUser.title[props.language]}</h2>
			{invitedUsernames.length > 0 ?
				<div className="line">
					<h3>{Texts.categoryTree.inviteUser.alreadyInvited[props.language]}</h3>
					<ul>{invitedUsernames}</ul>
				</div> :
				null
			}
			<div className="line">
				<input
					type="text"
					onChange={(event) => invitedUsernameChanged(event.target.value)}
					autoComplete="off"
					value={props.usernameSearchString}
					placeholder={Texts.categoryTree.inviteUser.username[props.language]}
				/>
			</div>
			{usernames.length > 0 ?
				<div className="line">
					<ul>{usernames}</ul>
				</div> :
				null
			}
			<button onClick={cancelInviteUser}>{Texts.categoryTree.inviteUser.cancel[props.language]}</button>
		</div>
	</div>
}



/******* S.D.G. *******/



