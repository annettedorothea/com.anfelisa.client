/********************************************************************************
 * generated by de.acegen 1.3.0
 ********************************************************************************/




import React, {useState} from "react";

import { LoggedInUser } from "./rootContainer/LoggedInUser";
import {route} from "../../gen/common/ActionFunctions";
import {Texts} from "../app/Texts";
import * as Utils from "../../gen/ace/Utils";
import {Spinner} from "./rootContainer/Spinner";
import {MainView} from "./rootContainer/MainView";
import {MessagesItem} from "./rootContainer/MessagesItem";
import {SaveBugDialog} from "./rootContainer/SaveBugDialog";
import {VersionMismatchDialog} from "./rootContainer/VersionMismatchDialog";
import {VersionMismatchErrorDialog} from "./rootContainer/VersionMismatchErrorDialog";

export let setRootContainerState;

export const RootContainer = (props) => {


	const [rootContainer, setRootContainer] = useState(props.rootContainer);
	setRootContainerState = setRootContainer;

	if (rootContainer) {
		if (rootContainer.loggedInUser) {
			return <div id="rootContainer" className="wrapper">
				<div className="header">
					<a
						onClick={() => route("#dashboard")}
						className="title"
					>
						Anfelisa
					</a>
					<LoggedInUser role={rootContainer.role} language={rootContainer.language} {...rootContainer.loggedInUser}/>
				</div>
				<div className="content">{content(rootContainer)}</div>
			</div>
		}
		return <div id="rootContainer">
			<LoggedInUser />
			{content(rootContainer)}
		</div>
	}

	return null;

}

const content = (props) => (
	<div>
		<Spinner {...props.spinner} language={props.language}/>
		<SaveBugDialog {...props.saveBugDialog} language={props.language}/>
		<VersionMismatchDialog {...props.versionMismatchDialog}  language={props.language}/>
		<VersionMismatchErrorDialog {...props.versionMismatchErrorDialog}  language={props.language}/>
		<div className="toastContainer">
			{props.messages ? props.messages.map((message) =>
				<MessagesItem {...message} language={props.language} key={message.id}/>) : []}
		</div>
		<MainView role={props.role} language={props.language} {...props.mainView}/>
		<div className={`footer ${props.loggedInUser === undefined ? "fixed" : ""}`}>
			<div className="footerContent">
				<h1>{Texts.container.about[props.language]}</h1>
				<p>
					Annette Pohl &middot; Im Sommerh√§ldele 9 &middot; 77799 Ortenberg &middot; Deutschland
				</p>
				<p>
					+49 781 99078158 &middot; <a href="mailto:info@anfelisa.de">info@anfelisa.de</a>
				</p>
				<p>
					{Texts.container.version[props.language]} {Utils.settings ? Utils.settings.clientVersion : ""}
				</p>
				<p>
					<a onClick={() =>
						Utils.saveTimeline(
							"no description",
							props.mainView && props.mainView.loggedInUser ? props.mainView.loggedInUser.username : "anonymous"
						)}
					   target="ace">save timeline</a>
				</p>
				<p>
					<a onClick={() => route("#privacypolicy")}>{Texts.login.privacyPolicy[props.language]}</a>
				</p>
			</div>
		</div>
	</div>
)





/******* S.D.G. *******/



