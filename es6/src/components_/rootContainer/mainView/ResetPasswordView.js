/********************************************************************************
 * generated by de.acegen 1.1.0
 ********************************************************************************/

import {Texts} from "../../../app/Texts";
import React from "react";
import {route} from "../../../../gen/common/ActionFunctions";
import CryptoJS from "crypto-js";
import {passwordChanged, passwordRepetitionChanged, resetPassword} from "../../../../gen/password/ActionFunctions";

export function uiElement(props) {
    return (
        <div className="center">
            <div className="form">
                <h1>{Texts.resetPassword.title[props.language]}</h1>
                <div className="line">
                    <label>{Texts.resetPassword.password[props.language]}</label>
                    <div className="inputContainer">
                        <input
                            type={"password"}
                            onChange={(e) => passwordChanged(CryptoJS.MD5(e.target.value).toString())}
                            autoComplete="off"
                        />
                    </div>
                </div>
                <div className="line">
                    <label>{Texts.resetPassword.passwordRepetition[props.language]}</label>
                    <div className="inputContainer">
                        <input
                            type={"password"}
                            onChange={(e) => passwordRepetitionChanged(CryptoJS.MD5(e.target.value).toString())}
                            autoComplete="off"
                        />
                        {props.passwordMismatch === true &&
                        <i className="fas fa-times outside error"/>}
                    </div>
                </div>
                <div className="moreMarginLine hCenter">
                    <button
                        onClick={resetPassword}
                        disabled={
                            !props.password || props.password && props.password.length === 0 ||
                            props.passwordMismatch === true
                        }>
                        {Texts.resetPassword.submit[props.language]}
                    </button>
                    <button
                        onClick={() => route("#")}>{Texts.resetPassword.cancel[props.language]}</button>
                </div>
            </div>
        </div>
    );
}


/******* S.D.G. *******/



